window.onload = function connect() {
  let qr_code_element=document.querySelector(".qr-code");
  let uniqueString = "";
  let myHeaders = new Headers({"Content-Type":"application/json"});
  let raw = JSON.stringify({
    "value": "get_qr_code"
  });
  let requestOptions = {
    method: 'POST',
    headers: myHeaders,
    body: raw
  };
  async function call(){
    await fetch("https://di-apis.smartdev.ai/getQrCodeString", requestOptions)
      .then(response =>{
        if(response.ok){
            return response.json();
        }
      })
      .then((result) =>{
        uniqueString = result.value;
        let bar = new QRCode(qr_code_element,{text:uniqueString,width:180,height:180,colorDark:"#000000",colorLight:"#ffffff",correctLevel:QRCode.CorrectLevel.H});
        let qrstirng=document.getElementById("qrstring");
        qrstirng.innerText=uniqueString;

        let raw2 = JSON.stringify({
          "value": uniqueString
        });
        requestOptions.body = raw2;
      });
  }
  call();
  let getValues = setInterval(async function(){
      await fetch("https://di-apis.smartdev.ai/getValues", requestOptions)
    .then(response =>{
      if(response.ok)
          return response.json();
    } )
    .then((result) =>{
      if(result){
        if(result.username){
          let urlEncodedDataPairs = [];
          let credentialId = document.getElementsByName("credentialId")[0];
          urlEncodedDataPairs.push(`${encodeURIComponent("credentialId")}=${encodeURIComponent(credentialId.value)}`);
          urlEncodedDataPairs.push(`${encodeURIComponent("username")}=${encodeURIComponent(result.username)}`);
          urlEncodedDataPairs.push(`${encodeURIComponent("password")}=${encodeURIComponent(result.value)}`);
          let urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');
          let auth = document.getElementsByName("url")[0];
          let XHR = new XMLHttpRequest();
          //XHR.withCredentials = true;
          XHR.addEventListener('load', (event) => {
              console.log("On loading")
              console.log(event)
              location.reload()
          });
          XHR.addEventListener('error', (event) => {
            console.log("On Error")
            console.log(event)
            location.reload()
        });
          XHR.open("POST", auth.value,true);
          XHR.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          XHR.setRequestHeader("mode", "navigate");
          XHR.send(urlEncodedData);
          clearInterval(getValues)
        }

      }
      })
    .catch((error)=>{
      
    })
  }, 5000);

  setTimeout(function(){
    clearInterval(getValues);
  }, 300000);
}