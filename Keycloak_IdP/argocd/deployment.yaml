apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: 174391158959.dkr.ecr.us-east-1.amazonaws.com/keycloak:latest
        imagePullPolicy: Always
        args: ["start "]
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: keycloak_admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: keycloak_admin_password
        - name: KC_PROXY
          valueFrom: 
            configMapKeyRef:
              name: keycloak-configmap
              key: kc_proxy
        - name: KC_DB
          valueFrom: 
            configMapKeyRef:
              name: keycloak-configmap
              key: kc_db
        - name: KC_DB_URL_HOST
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: kc_db_url_host
        - name: KC_DB_URL_PORT
          valueFrom: 
            configMapKeyRef:
              name: keycloak-configmap
              key: kc_db_url_port
        - name: KC_DB_URL_DATABASE
          valueFrom: 
            configMapKeyRef:
              name: keycloak-configmap
              key: kc_db_url_database
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: kc_db_username
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: kc_db_password
        - name: KC_HOSTNAME
          valueFrom: 
            configMapKeyRef:
              name: keycloak-configmap
              key: kc_hostname
        ports:
        - name: http
          containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  annotations:
   alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-3:174391158959:certificate/787244f8-7c83-41ea-bd7f-05bf319a8b44
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 8080}, {"HTTPS": 443}]'
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/target-type: ip
   alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    #kubernetes.io/ingress.class: nginx
   #nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
spec:
  ingressClassName: alb
  rules:
  - host: iam.smartdev.ai
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: ssl-redirect
            port:
              name: use-annotation
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: keycloak
            port:
              number: 8080
  tls:
  - hosts:
    - iam.smartdev.ai
                  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-configmap
data:
  kc_db: "postgres"
  kc_db_url_port: "5432"
  kc_db_url_database: "digitalid-iam"
  kc_proxy: "edge"
  kc_hostname: "iam.smartdev.ai"
  
---

apiVersion: v1
kind: Secret
metadata:
    name: keycloak-secret
type: Opaque
stringData:
  keycloak_admin: "admin"
  keycloak_admin_password: "sm@rt@2023&"
  kc_db_url_host: "db-staging.cayucalsr4iy.us-east-1.rds.amazonaws.com"
  kc_db_username: "digital"
  kc_db_password: "Uzr$69*pc3$7"
