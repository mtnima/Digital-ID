"RFID_Error_AlreadyDone" = "RFID: The requested operation is already performed";
"RFID_Error_Busy" = "RFID: RFID is busy";
"RFID_Error_Failed" = "RFID: Failed";
"RFID_Error_FileIOError" = "RFID File: IO Error";
"RFID_Error_InvalidDirectory" = "RFID: Invalid directory";
"RFID_Error_InvalidParameter" = "RFID: Invalid parameter in ExecuteCommand() call found";
"RFID_Error_Layer34_CRC" = "RFID: Layer 34 - CRC";
"RFID_Error_Layer34_Collision" = "RFID: Layer 34 - Collision";
"RFID_Error_Layer34_Collision_TooMany" = "RFID: Layer 34 - Too many collision";
"RFID_Error_Layer34_DataContents" = "RFID: Layer 34 - Data contents";
"RFID_Error_Layer34_DataIntegrity" = "RFID: Layer 34 - Data integrity";
"RFID_Error_Layer34_DataLength" = "RFID: Layer 34 - Data length";
"RFID_Error_Layer34_GlobalTimeOut" = "RFID: Layer 34 - Globa timeout";
"RFID_Error_Layer34_MIFARE_Auth" = "RFID: Layer 34 - MIFARE auth";
"RFID_Error_Layer34_NoError" = "RFID: Layer 34 - No error";
"RFID_Error_Layer34_Protocol" = "RFID: Layer 34 - Protocol";
"RFID_Error_Layer34_ProtocolB" = "RFID: Layer 34 - Protocol B";
"RFID_Error_Layer34_RFU" = "RFID: Layer 34 - RFU";
"RFID_Error_Layer34_SAM_Acknowledge" = "RFID: Layer 34 - SAM acknowledge";
"RFID_Error_Layer34_SAM_Collision" = "RFID: Layer 34 - SAM collision";
"RFID_Error_Layer34_SAM_Error" = "RFID: Layer 34 - SAM error";
"RFID_Error_Layer34_TimeOut" = "RFID: Layer 34 - Timeout";
"RFID_Error_NoChipDetected" = "RFID: No chip is detected";
"RFID_Error_NoError" = "RFID: No error";
"RFID_Error_NotAvailable" = "RFID: Unavailable";
"RFID_Error_NotEnoughMemory" = "RFID: Out of memory";
"RFID_Error_NotInitialized" = "RFID: Device is uninitialized";
"RFID_Error_NotPerformed" = "RFID: Not performed";
"RFID_Error_OldFirmware" = "RFID: The firmware needs to be updated to a newer version";
"RFID_Error_PCSC_CantConnectCard" = "PCSC: The card cannot be connected";
"RFID_Error_PCSC_CardIsBusy" = "PCSC: The card is busy";
"RFID_Error_PCSC_CardIsNotConnected" = "PCSC: The card is not connected";
"RFID_Error_PCSC_ExtLe_Failed" = "PCSC: ExtLe Failed";
"RFID_Error_PCSC_Failed" = "PCSC: Failed";
"RFID_Error_PCSC_FailedSCard" = "PCSC: Failed Smart Card";
"RFID_Error_PCSC_OperationCancelled" = "PCSC: Operation is cancelled";
"RFID_Error_PCSC_ReaderNotAvailable" = "PCSC: The reader is unavailable";
"RFID_Error_Session_AccessControl_AA_Failed" = "RFID: AA failed";
"RFID_Error_Session_AccessControl_CA_Failed" = "RFID: CA failed";
"RFID_Error_Session_AccessControl_IncorrectOptionCA" = "RFID: Incorrect option CA";
"RFID_Error_Session_AccessControl_RI_Failed" = "RFID: RI failed";
"RFID_Error_Session_AccessControl_RequiresCA" = "RFID: CA required";
"RFID_Error_Session_AccessControl_RequiresCAKeys" = "RFID: CA keys required";
"RFID_Error_Session_AccessControl_RequiresPACE" = "RFID: PACE required";
"RFID_Error_Session_AccessControl_RequiresSM" = "RFID: SM required";
"RFID_Error_Session_AccessControl_RequiresTA" = "RFID: TA required";
"RFID_Error_Session_AccessControl_TA_Failed" = "RFID: TA failed";
"RFID_Error_Session_AccessControl_UnknownType" = "RFID: Access control unknown type";
"RFID_Error_Session_AccessKey_IncorrectData" = "RFID: Access key incorrect data";
"RFID_Error_Session_AccessKey_IncorrectSMType" = "RFID: Access key incorrect SM type";
"RFID_Error_Session_AccessKey_NotSet" = "RFID: Access key not set";
"RFID_Error_Session_AccessKey_Restricted" = "RFID: Access key restricted";
"RFID_Error_Session_AccessKey_UnknownType" = "RFID: Access key unknown type";
"RFID_Error_Session_AccessKey_UnsupportedSMType" = "RFID: Access key unsupported SM type";
"RFID_Error_Session_File_AccessDenied" = "RFID file: Access denied";
"RFID_Error_Session_File_CantReadData" = "RFID file: Cannot read data";
"RFID_Error_Session_File_CantUseData" = "RFID file: Cannot use data";
"RFID_Error_Session_File_Contents_UnexpectedData" = "RFID file: Contains unexpected data";
"RFID_Error_Session_File_IncorrectData" = "RFID file: Incorrect data";
"RFID_Error_Session_File_NotEnoughData" = "RFID file: Insufficient data";
"RFID_Error_Session_File_UnexpectedData" = "RFID file: Unexpected data";
"RFID_Error_Session_File_WrongTag" = "RFID file: Wrong tag";
"RFID_Error_Session_IncorrectData" = "RFID: Incorrect data";
"RFID_Error_Session_InvalidAuxData_CommunityID" = "RFID: Invalid aux data - community ID";
"RFID_Error_Session_InvalidAuxData_DateOfBirth" = "RFID: Invalid aux data - date of birth";
"RFID_Error_Session_InvalidAuxData_DateOfExpiry" = "RFID: Invalid aux data - date of expiry";
"RFID_Error_Session_IsClosed" = "RFID: Session is closed";
"RFID_Error_Session_PA_HashCheckFailed" = "RFID: Hash check failed";
"RFID_Error_Session_PA_SignatureCheckFailed" = "RFID: SO signature check failed";
"RFID_Error_Session_ProcedureType_NotSet" = "RFID: Procedure type not set";
"RFID_Error_Session_ProcedureType_Unknown" = "RFID: Unknown procedure type";
"RFID_Error_Session_ProcedureType_Unsupported" = "RFID: Unsupported procedure type";
"RFID_Error_Session_PwdManagement_NotAuthorized" = "RFID: PWD management not authorized";
"RFID_Error_Session_TerminalType_BadCertificate" = "RFID: Terminal type bad certificate";
"RFID_Error_Session_TerminalType_NotSet" = "RFID: Terminal type not set";
"RFID_Error_Session_TerminalType_Unknown" = "RFID: Terminal type unknown";
"RFID_Error_Session_Terminal_UnsupportedOperation" = "RFID: Unsupported terminal operation";
"RFID_Error_Session_eSign_PIN_NotSet" = "RFID: eSign PIN not set";
"RFID_Error_Session_eSign_PIN_NotVerified" = "RFID: eSign PIN not verified";
"RFID_Error_Session_eSign_RequiresAppSelection" = "RFID: eSign requires app selection";
"RFID_Error_UnknownCommand" = "RFID: Unknown command";
"RFID_LAYER6_APP_SELECTION_FAILURE" = "LAYER6: ISO7816_A_03 \"Application selection failure\"";
"RFID_LAYER6_EXT_AUTH_FAILURE" = "LAYER6: APDU_INS_EXTERNAL_AUTHENTICATE (external authentication) failure";
"RFID_LAYER6_FILE_EOF1" = "LAYER6: Reading beyond EOF / Unexpected EOF";
"RFID_LAYER6_FILE_EOF2" = "LAYER6: Reading beyond EOF / Unexpected EOF";
"RFID_LAYER6_FILE_NOT_FOUND" = "LAYER6: File selection failure / file not found";
"RFID_LAYER6_GENERAL_AUTH_FAILURE" = "LAYER6: General Authenticity Failure";
"RFID_LAYER6_GET_CHALLENGE_FAILURE" = "LAYER6: GET CHALLENGE failure";
"RFID_LAYER6_INCORRECT_PARAMS" = "LAYER6: Incorrect params";
"RFID_LAYER6_INT_AUTH_FAILURE" = "LAYER6: APDU_INS_INTERNAL_AUTHENTICATE failure";
"RFID_LAYER6_MSE_SET_AT_FAILURE" = "LAYER6: MSE:Set AT failure";
"RFID_LAYER6_MSE_SET_DST_FAILURE" = "LAYER6: MSE:Set DST failure";
"RFID_LAYER6_MSE_SET_KAT_FAILURE" = "LAYER6: MSE:Set KAT failure";
"RFID_LAYER6_MUTUAL_AUTH_ENC_FAIL" = "LAYER6: ISO7816_B_02 \"Mutual authentication encryption failure\"";
"RFID_LAYER6_MUTUAL_AUTH_FAILURE" = "LAYER6: ISO7816_B_03 \"Mutual authentication failure\"";
"RFID_LAYER6_MUTUAL_AUTH_FAILURE_DATA" = "LAYER6: ISO7816_B_03 \"Mutual authentication failure data\"";
"RFID_LAYER6_MUTUAL_AUTH_MAC_FAIL" = "LAYER6: ISO7816_B_01 \"Mutual authentication MAC failure\"";
"RFID_LAYER6_NON_TLV_RESPONSE_DATA" = "LAYER6: Not TLV response data";
"RFID_LAYER6_NO_REFERENCE_DATA" = "LAYER6: No reference data";
"RFID_LAYER6_PSO_CERTIFICATE_FAILURE" = "LAYER6: PSO CERTIFICATE failure";
"RFID_LAYER6_PWD_BLOCKED" = "LAYER6: PWD blocked";
"RFID_LAYER6_PWD_BLOCKED_2" = "LAYER6: PWD blocked 2";
"RFID_LAYER6_PWD_DEACTIVATED" = "LAYER6: PWD deactivated";
"RFID_LAYER6_PWD_DEACTIVATED_2" = "LAYER6: PWD deactivated 2";
"RFID_LAYER6_PWD_FAILED" = "LAYER6: PWD failed";
"RFID_LAYER6_PWD_SUSPENDED" = "LAYER6: PWD suspended";
"RFID_LAYER6_PWD_SUSPENDED_2" = "LAYER6: PWD suspended 2";
"RFID_LAYER6_SECURITY_MANAGER" = "LAYER6: Secure Messaging was not activated";
"RFID_LAYER6_SM_DO87_INCORRECT" = "LAYER6: SM failure – incorrect cryptogram";
"RFID_LAYER6_SM_DO87_MISSING" = "LAYER6: SM failure – cryptogram missing";
"RFID_LAYER6_SM_DO8E_MISSING" = "LAYER6: SM failure – MAC missing";
"RFID_LAYER6_SM_DO99_MISSING" = "LAYER6: SM failure – secured status bytes missing";
"RFID_LAYER6_SM_MAC_INCORRECT" = "LAYER6: SM failure – incorrect MAC";
"RFID_LAYER6_WRONG_RND_ICC_LENGTH" = "LAYER6: Wrong data length (APDU_INS_GET_CHALLENGE)";
"RSDT_RFID_READING_FINISHED" = "RFID data reading finished";
"TCT_Unknown" = "Unknown";
"ch_4079" = "Handwritten";
"ch_4556" = "Moire pattern";
"chd_AlgorithmStepsError" = "Hologram authentication error";
"chd_BackgroundComparisonError" = "Brightness of the two pages is different";
"chd_BadAreaInAxial" = "Retroreflective protection failure";
"chd_BarcodeDataFormatError" = "Barcode format error";
"chd_BarcodeReadedWithErrors" = "Barcode has been read with errors";
"chd_BarcodeSizeParamsError" = "Barcode parameters error";
"chd_DocumentIsCancelling" = "Document is cancelled";
"chd_ElementShouldBeColored" = "Element should be colored";
"chd_ElementShouldBeGrayscale" = "Element should be grayscale";
"chd_ExceptionInModule" = "Intercepted exception";
"chd_FalseIPIParameters" = "False IPI parameters";
"chd_FalseLuminiscenceError" = "Presence of excess luminescent objects";
"chd_FalseLuminiscenceInBlank" = "Fake luminescence in UV";
"chd_FalseLuminiscenceInMRZ" = "Excessive luminescence in MRZ";
"chd_FibersNotFound" = "Fibers are not found";
"chd_FieldPosCorrector_Glares_In_Photo_Area" = "Glare in the photo area";
"chd_FieldPosCorrector_Highlight_IR" = "Excessive light in IR";
"chd_FieldPosCorrector_PhotoReplaced" = "Image was replaced";
"chd_FieldsComparisonLogicError" = "Logical error when comparing fields";
"chd_FingerprintsComparisonMismatch" = "Fingerprint mismatch";
"chd_FinishedByTimeout" = "Document verification timeout has expired";
"chd_FixedPatternError" = "Specified object noncoincidence";
"chd_HoloAreasNotLoaded" = "No hologram in the document description";
"chd_HoloElementShapeError" = "Holographic element shape mismatch";
"chd_HoloPhotoFaceComparisonFailed" = "Face mismatch before and after switching on the flashlight";
"chd_HoloPhotoFaceGlareInCenterAbsent" = "There is no glare from the flashlight in the center of the document";
"chd_HoloPhotoFaceNotDetected" = "No face found in the photo area";
"chd_HoloPhoto_DocumentOutsideFrame" = "The document is outside the frame";
"chd_HologramElementAbsent" = "Hologram is absent";
"chd_HologramElementPresent" = "Hologram found";
"chd_HologramFramesIsAbsent" = "No holographic effect detected";
"chd_HologramHoloFieldIsAbsent" = "No holographic effect was detected in the specified area";
"chd_Hologram_Side_Top_Images_Absent" = "No side or top images";
"chd_IncorrectBackgroundLight" = "Incorrect background brightness";
"chd_IncorrectTextColor" = "Incorrect text color";
"chd_InternalError" = "Error of internal data processing";
"chd_InvalidChecksum" = "Invalid checksum";
"chd_InvalidFieldFormat" = "The format of the field does not match the description of the document";
"chd_InvalidInputData" = "Invalid input data";
"chd_InvisibleElementPresent" = "Object must be invisible";
"chd_Liveness_DepthCheckFailed" = "Liveness: depth check failed";
"chd_LogicError" = "Logical data error";
"chd_LowContrastInIRLight" = "Incorrect object contrast in IR light";
"chd_MobileImages_LowLightConditions" = "Inappropriate light conditions for capturing images";
"chd_MobileImages_WhileUVNoDifference" = "Low difference between images in different illumination schemes";
"chd_MrzQuality_WrongBackground" = "Signs of MRZ region editing detected";
"chd_MrzQuality_WrongMrzDpi" = "MRZ dimensions do not match the current document's MRZ dimensions";
"chd_NecessaryImageNotFound" = "The image required for this check is missing";
"chd_NotAllBarcodesRead" = "This document should contain more barcodes";
"chd_OVI_BadColor_Front" = "OVI object color mismatch under white light";
"chd_OVI_BadColor_Percent" = "Low percentage of coincidence between the OVI elements";
"chd_OVI_BadColor_Side" = "OVI object color mismatch under axial light";
"chd_OVI_ColorInvariable" = "OVI color invariable";
"chd_OVI_IR_Invisible" = "OVI object contrast mismatch";
"chd_OVI_InsufficientArea" = "Insufficient area of OVI object";
"chd_OVI_Wide_Color_Spread" = "OVI object color range mismatch";
"chd_Pass" = "No errors";
"chd_PhotoFalseLuminiscence" = "False luminescence in the photo area";
"chd_PhotoPattern_DifferentColors" = "Colors of the pattern on the photo and on the blank are different";
"chd_PhotoPattern_DifferentLinesThickness" = "Different thickness of the pattern lines";
"chd_PhotoPattern_IR_Visible" = "Security pattern visible in IR";
"chd_PhotoPattern_Interrupted" = "The pattern between the photo and the blank has a break";
"chd_PhotoPattern_InvalidColor" = "Invalid color of the security pattern";
"chd_PhotoPattern_Not_Intersect" = "The edge of the photo does not intersect with the pattern";
"chd_PhotoPattern_PatternNotFound" = "Pattern was not found in the photo area";
"chd_PhotoPattern_Shifted" = "The pattern on the photo is shifted relative to the pattern on the blank";
"chd_PhotoPattern_Shifted_Vert" = "Pattern lines are vertically shifted relative to each other";
"chd_PhotoSidesNotFound" = "The required photo border was not found";
"chd_PhotoSize_Is_Wrong" = "Photo size is incorrect";
"chd_PhotoWhiteIRDontMatch" = "The photos in white and IR light do not match";
"chd_Photo_Corners_Is_Wrong" = "The corners of the photo do not meet the requirements";
"chd_Photo_IsNot_Rectangle" = "The shape of the photo is not rectangular";
"chd_PortraitComparison_NoLivePhoto" = "There is no camera image";
"chd_PortraitComparison_NoPortraitDetected" = "No face found in the image";
"chd_PortraitComparison_NoServiceLicense" = "There is no license for the service";
"chd_PortraitComparison_NoServiceReply" = "The service does not respond";
"chd_PortraitComparison_NotEnoughImages" = "Not enough images";
"chd_PortraitComparison_PortraitsDiffer" = "The portraits do not match";
"chd_PortraitComparison_ServiceError" = "Service error";
"chd_SourcesComparisonError" = "Noncoincidence of data from different sources";
"chd_SpecksInUV" = "Overexposure or glares in the image under UV light";
"chd_SyntaxError" = "Data syntax error";
"chd_TextColorShouldBeBlue" = "Text color should be blue";
"chd_TextColorShouldBeGreen" = "Text color should be green";
"chd_TextColorShouldBeRed" = "Text color should be red";
"chd_TextShouldBeBlack" = "Text color should be black";
"chd_TooLowResolution" = "Too low resolution to detect fibers";
"chd_TooManyObjects" = "Too many objects";
"chd_TooMuchShift" = "The shift value is greater than the allowed value";
"chd_TrueLuminiscenceError" = "Noncoincidence of luminescent objects";
"chd_UVDullPaperError" = "UV dull paper check error";
"chd_UVDullPaper_Blank" = "UV dull paper check in the area of the blank";
"chd_UVDullPaper_MRZ" = "UV dull paper check in the MRZ area";
"chd_UVDullPaper_Photo" = "UV dull paper check in the photo area";
"chd_UncertainVerification" = "Reliable decision cannot be made";
"chd_Unknown" = "Unknown result";
"chd_VisibleElementAbsent" = "No visible object under IR";
"errLDS_AA_IncorrectTrailer" = "Error - AA: Incorrect Trailer";
"errLDS_AA_PublicKey_IncorrectData" = "Error - AA: Public Key Incorrect Data";
"errLDS_AA_PublicKey_IncorrectParameters" = "Error - AA: Public Key Incorrect Parameters";
"errLDS_AA_PublicKey_UndefinedParameters" = "Error - AA: Public Key Undefined Parameters";
"errLDS_AA_PublicKey_UnsupportedAlgorithm" = "Error - AA: Public Key Unsupported Algorithm";
"errLDS_AA_Signature_IncorrectData" = "Error - AA: Signature Incorrect Data";
"errLDS_AA_UnsupportedDigestAlgorithm" = "Error - AA: Unsupported Digest Algorithm";
"errLDS_AA_UnsupportedRecoveryScheme" = "Error - AA: Unsupported recovery scheme";
"errLDS_ASN_Certificate_Extensions_IncorrectData" = "Error - ASN Certificate: Extensions incorrect data";
"errLDS_ASN_Certificate_IncorrectData" = "Error - ASN Certificate: Incorrect data";
"errLDS_ASN_Certificate_Issuer_IncorrectData" = "Error - ASN Certificate: Issuer incorrect data";
"errLDS_ASN_Certificate_SN_IncorrectData" = "Error - ASN Certificate: SN incorrect data";
"errLDS_ASN_Certificate_Signature_IncorrectData" = "Error - ASN Certificate: Signature incorrect data";
"errLDS_ASN_Certificate_SubjectPK_IncorrectData" = "Error - ASN Certificate: Subject PK incorrect data";
"errLDS_ASN_Certificate_Subject_IncorrectData" = "Error - ASN Certificate: Subject incorrect data";
"errLDS_ASN_Certificate_Validity_IncorrectData" = "Error - ASN Certificate: Validity incorrect data";
"errLDS_ASN_Certificate_Version_IncorrectData" = "Error - ASN Certificate: Version incorrect data";
"errLDS_ASN_Contents_UnexpectedData" = "Error - ASN: Contents unexpected data";
"errLDS_ASN_IncorrectData" = "Error - ASN: Incorrect data";
"errLDS_ASN_LDSObject_DGHashes_IncorrectData" = "Error - ASN LDS object: DG hashes incorrect data";
"errLDS_ASN_LDSObject_DigestAlgorithm_IncorrectData" = "Error - ASN LDS object: Digest algorithm incorrect data";
"errLDS_ASN_LDSObject_IncorrectData" = "Error - ASN LDS object: Incorrect data";
"errLDS_ASN_LDSObject_VersionInfo_IncorrectData" = "Error - ASN LDS object: Version info incorrect data";
"errLDS_ASN_LDSObject_Version_IncorrectData" = "Error - ASN LDS object: Version incorrect data";
"errLDS_ASN_NotEnoughData" = "Error - ASN: Not enough data";
"errLDS_ASN_SignedData_DigestAlgorithms_IncorrectData" = "Error - ASN Signed data: Digest algorithms incorrect data";
"errLDS_ASN_SignedData_EncapContents_IncorrectData" = "Error - ASN Signed data: Encap contents incorrect data";
"errLDS_ASN_SignedData_IncorrectData" = "Error - ASN Signed data: Incorrect data";
"errLDS_ASN_SignedData_Version_IncorrectData" = "Error - ASN Signed data: Version incorrect data";
"errLDS_ASN_SignerInfo_DigestAlg_IncorrectData" = "Error - ASN Signer info: Digest algorithms incorrect data";
"errLDS_ASN_SignerInfo_IncorrectData" = "Error - ASN Signer info: Incorrect data";
"errLDS_ASN_SignerInfo_SID_IncorrectData" = "Error - ASN Signer info: SID incorrect data";
"errLDS_ASN_SignerInfo_SignAlg_IncorrectData" = "Error - ASN Signer info: Sign algorithms incorrect data";
"errLDS_ASN_SignerInfo_Signature_IncorrectData" = "Error - ASN Signer info: Signature incorrect data";
"errLDS_ASN_SignerInfo_SignedAttrs_IncorrectData" = "Error - ASN Signer info: Signed attributes incorrect data";
"errLDS_ASN_SignerInfo_UnsignedAttrs_IncorrectData" = "Error - ASN Signer info: Unsigned attributes incorrect data";
"errLDS_ASN_SignerInfo_Version_IncorrectData" = "Error - ASN Signer info: Version incorrect data";
"errLDS_Auth_AlgorithmParametersDataInvalid" = "Error - Auth: Algorithm parameters data invalid";
"errLDS_Auth_AlgorithmParametersNotDefined" = "Error - Auth: Algorithm parameters not defined";
"errLDS_Auth_Error" = "Error - Auth: Error";
"errLDS_Auth_MessedAlgorithms" = "Error - Auth: Messed algorithms";
"errLDS_Auth_PublicKeyDataInvalid" = "Error - Auth: Public key data invalid";
"errLDS_Auth_SignatureCheckFailed" = "Error - Auth: Signature check failed";
"errLDS_Auth_SignatureDataIncorrect" = "Error - Auth: Signature data incorrect";
"errLDS_Auth_SignatureDataInvalid" = "Error - Auth: Signature data invalid";
"errLDS_Auth_SignerInfo_CantFindCertificate" = "Error - Auth: Signer info cannot find certificate";
"errLDS_Auth_UnsupportedDigestAlgorithm" = "Error - Auth: Unsupported digest algorithm";
"errLDS_Auth_UnsupportedPublicKeyAlgorithm" = "Error - Auth: Unsupported public key algorithm";
"errLDS_Auth_UnsupportedSignatureAlgorithm" = "Error - Auth: Unsupported signature algorithm";
"errLDS_BAP_SymmetricCypher_CantInitialize" = "Error - BAP: Symmetric Cypher Cannot Initialize";
"errLDS_CA_CantFindDomainParameters" = "Error - CA: Cannot Find Domain Parameters";
"errLDS_CA_CantFindInfo" = "Error - CA: Cannot Find Info";
"errLDS_CA_CantFindPublicKey" = "Error - CA: Cannot Find Public Key";
"errLDS_CA_EphemeralKeys_CantCreate" = "Error - CA: Ephemeral Keys Cannot Create";
"errLDS_CA_IncorrectVersion" = "Error - CA: Incorrect Version";
"errLDS_CA_KeyAgreement_CantInitialize" = "Error - CA: Key Agreement Cannot Initialize";
"errLDS_CA_NonMatchingAuthTokens" = "Error - CA: Non-Matching Auth Tokens";
"errLDS_CA_PublicKey_UnsupportedAlgorithm" = "Error - CA: Public Key Unsupported Algorithm";
"errLDS_CA_SharedSecret_CantCreate" = "Error - CA: Shared Secret Cannot Create";
"errLDS_CV_Certificate_CAR_IncorrectData" = "Error - CV Certificate: CAR incorrect data";
"errLDS_CV_Certificate_CHAT_IncorrectData" = "Error - CV Certificate: CHAT incorrect data";
"errLDS_CV_Certificate_CHAT_UnsupportedTerminalType" = "Error - CV Certificate: CHAT unsupported terminal type";
"errLDS_CV_Certificate_CHR_IncorrectData" = "Error - CV Certificate: CHR incorrect data";
"errLDS_CV_Certificate_CPI_IncorrectData" = "Error - CV Certificate: CPI incorrect data";
"errLDS_CV_Certificate_Extensions_IncorrectData" = "Error - CV Certificate: Extensions incorrect data";
"errLDS_CV_Certificate_IncorrectData" = "Error - CV Certificate: Incorrect data";
"errLDS_CV_Certificate_MissingMandatoryData_PK" = "Error - CV Certificate: Missing mandatory data PK";
"errLDS_CV_Certificate_PrivateKey_IncorrectData" = "Error - CV Certificate: Private key incorrect data";
"errLDS_CV_Certificate_PrivateKey_InvalidParams" = "Error - CV Certificate: Private key invalid params";
"errLDS_CV_Certificate_PrivateKey_Missing" = "Error - CV Certificate: Private key missing";
"errLDS_CV_Certificate_PrivateKey_Unsupported" = "Error - CV Certificate: Private key unsupported";
"errLDS_CV_Certificate_PublicKey_IncorrectData" = "Error - CV Certificate: Public key incorrect data";
"errLDS_CV_Certificate_PublicKey_Unsupported" = "Error - CV Certificate: Public key unsupported";
"errLDS_CV_Certificate_ValidFrom_IncorrectData" = "Error - CV Certificate: Valid from incorrect data";
"errLDS_CV_Certificate_ValidTo_IncorrectData" = "Error - CV Certificate: Valid to incorrect data";
"errLDS_DG_Contents_UnexpectedData" = "Error - DG: Contents unexpected data";
"errLDS_DG_WrongTag" = "Error - DG: Wrong Tag";
"errLDS_ICAO_LDSObject_UnsupportedDigestAlgorithm" = "Error - ICAO LDS object: Unsupported digest algorithm";
"errLDS_ICAO_SignedData_SignerInfos_Empty" = "Error - ICAO Signed data: Signer info empty";
"errLDS_ICAO_SignerInfo_MessageDigestError" = "Error - ICAO Signer info: Message digest error";
"errLDS_ICAO_SignerInfo_SignedAttrs_Missed" = "Error - ICAO Signer info: Signed attributes missed";
"errLDS_ICAO_SignerInfo_UnsupportedDigestAlgorithm" = "Error - ICAO Signer info: Unsupported digest algorithm";
"errLDS_ICAO_SignerInfo_UnsupportedSignatureAlgorithm" = "Error - ICAO Signer info: Unsupported signature algorithm";
"errLDS_Ok" = "OK";
"errLDS_PACE_CAM_Data_CantVerify" = "Error - PACE: CAM data cannot verify";
"errLDS_PACE_CAM_Data_Incorrect" = "Error - PACE: CAM data incorrect";
"errLDS_PACE_CAM_Data_NonMatching" = "Error - PACE: CAM data non-matching";
"errLDS_PACE_DomainParams_UnsupportedFormat" = "Error - PACE: Domain Params Unsupported Format";
"errLDS_PACE_EphemeralKeys_CantCreate" = "Error - PACE: Ephemeral Keys Cannot Create";
"errLDS_PACE_EphemeralKeys_Incorrect" = "Error - PACE: Ephemeral Keys Incorrect";
"errLDS_PACE_IM_RandomMapping_Failed" = "Error - PACE: Random mapping failed";
"errLDS_PACE_IM_Scheme_Incorrect" = "Error - PACE: IM scheme incorrect";
"errLDS_PACE_Info_NotAvailable" = "Error - PACE: Info Not Available";
"errLDS_PACE_KeyAgreement_CantInitialize" = "Error - PACE: Key Agreement Cannot Initialize";
"errLDS_PACE_Mapping_CantDecodeNonce" = "Error - PACE: Mapping Cannot Decode Nonce";
"errLDS_PACE_Mapping_CantPerform" = "Error - PACE: Mapping Cannot Perform";
"errLDS_PACE_Mapping_EphemeralKeys_Incorrect" = "Error - PACE: Mapping Ephemeral Keys Incorrect";
"errLDS_PACE_NonMatchingAuthTokens" = "Error - PACE: Non-Matching Auth Tokens";
"errLDS_PACE_SharedSecret_CantCreate" = "Error - PACE: Shared Secret Cannot Create";
"errLDS_PACE_SymmetricCypher_CantInitialize" = "Error - PACE: Symmetric Cypher Cannot Initialize";
"errLDS_RI_SectorKey_CantFind" = "Error - RI: Sector Key Cannot Find";
"errLDS_RI_SectorKey_IncompleteData" = "Error - RI: Sector Key Incomplete Data";
"errLDS_RI_SectorKey_IncorrectData" = "Error - RI: Sector Key Incorrect Data";
"errLDS_TA_CantBuildCertificateChain" = "Error - TA: Cannot Build Certificate Chain";
"errLDS_TA_CantFindISPrivateKey" = "Error - TA: Cannot Find IS Private Key";
"errLDS_TA_IncorrectVersion" = "Error - TA: Incorrect Version";
"errLDS_TA_InvalidKeyAlgorithmParameters" = "Error - TA: Invalid Key Algorithm Parameters";
"errLDS_TA_PublicKey_UnsupportedAlgorithm" = "Error - TA: Public Key Unsupported Algorithm";
"errLDS_TA_SignatureBuildingError" = "Error - TA: Signature Building Error";
"errLDS_VDS_Issuing_Country_IncorrectData" = "Error - VDS: Issuing country incorrect data";
"errLDS_VDS_Issuing_Country_Size" = "Error - VDS: Issuing country size";
"errLDS_VDS_NC_IncorrectData" = "Error - VDS: Incorrect data";
"errLDS_VDS_NC_MissingOrIncorrect_Certificate" = "Error - VDS: Missing or incorrect certificate";
"errLDS_VDS_NC_MissingOrIncorrect_Data" = "Error - VDS: Missing or incorrect data";
"errLDS_VDS_NC_MissingOrIncorrect_Header" = "Error - VDS: Missing or incorrect header";
"errLDS_VDS_NC_MissingOrIncorrect_IssuingCountry" = "Error - VDS: Missing or incorrect issuing country";
"errLDS_VDS_NC_MissingOrIncorrect_Message" = "Error - VDS: Missing or incorrect message";
"errLDS_VDS_NC_MissingOrIncorrect_SigAlgorithm" = "Error - VDS: Missing or incorrect signature algorithm";
"errLDS_VDS_NC_MissingOrIncorrect_SigValue" = "Error - VDS: Missing or incorrect signature value";
"errLDS_VDS_NC_MissingOrIncorrect_Signature" = "Error - VDS: Missing or incorrect signature";
"errLDS_VDS_NC_MissingOrIncorrect_Type" = "Error - VDS: Missing or incorrect type";
"errLDS_VDS_NC_MissingOrIncorrect_Version" = "Error - VDS: Missing or incorrect version";
"errLDS_VDS_Signature_IncorrectData" = "Error - VDS: Signature incorrect data";
"errLDS_VDS_Signer_Certificate_Data" = "Error - VDS: Signature certificate data";
"errLDS_VDS_Signer_Certificate_Size" = "Error - VDS: Signature certificate size";
"errLDS_VDS_UnsupportedVersion" = "Error - VDS: Unsupported version";
"ntfLDS_ASN_Certificate_DuplicatingExtensions" = "Notification - ASN certificate: Duplicating extensions";
"ntfLDS_ASN_Certificate_EmptyIssuer" = "Notification - ASN certificate: Empty issuer";
"ntfLDS_ASN_Certificate_EmptySubject" = "Notification - ASN certificate: Empty subject";
"ntfLDS_ASN_Certificate_ForcedDefaultCSCARole" = "Notification - ASN certificate: Forced default CSCA role";
"ntfLDS_ASN_Certificate_ForcedDefaultDSRole" = "Notification - ASN certificate: Forced Default DS role";
"ntfLDS_ASN_Certificate_IncorrectIssuerSubjectDS" = "Notification - ASN certificate: Incorrect issuer subject DS";
"ntfLDS_ASN_Certificate_IncorrectTimeCoding" = "Notification - ASN certificate: Incorrect time coding";
"ntfLDS_ASN_Certificate_IncorrectUseOfGeneralizedTime" = "Notification - ASN certificate: Incorrect use of generalized time";
"ntfLDS_ASN_Certificate_IncorrectVersion" = "Notification - ASN certificate: Incorrect version";
"ntfLDS_ASN_Certificate_NonMatchingSignatureAlgorithm" = "Notification - ASN certificate: Non-matching signature algorithm";
"ntfLDS_ASN_Certificate_UnsupportedCriticalExtension" = "Notification - ASN certificate: Unsupported critical extension";
"ntfLDS_ASN_SignedData_ContentOID_Incorrect" = "Notification - ASN signed data: Content OID incorrect";
"ntfLDS_ASN_SignedData_OID_Incorrect" = "Notification - ASN signed data: OID incorrect";
"ntfLDS_ASN_SignedData_Version_Incorrect" = "Notification - ASN signed data: Version incorrect";
"ntfLDS_ASN_SignerInfo_ContentTypeAttr_Data" = "Notification - ASN signer info: Content type attr data";
"ntfLDS_ASN_SignerInfo_ContentTypeAttr_Missing" = "Notification - ASN signer info: Content type attr missing";
"ntfLDS_ASN_SignerInfo_ContentTypeAttr_Value" = "Notification - ASN signer info: Content type attr value";
"ntfLDS_ASN_SignerInfo_ListContentDescriptionAttr_Data" = "Notification - ASN signer info: List content description attr data";
"ntfLDS_ASN_SignerInfo_ListContentDescriptionAttr_Missing" = "Notification - ASN signer info: List content description attr missing";
"ntfLDS_ASN_SignerInfo_MessageDigestAttr_Data" = "Notification - ASN signer info: Message digest attr data";
"ntfLDS_ASN_SignerInfo_MessageDigestAttr_Missing" = "Notification - ASN signer info: Message digest attr missing";
"ntfLDS_ASN_SignerInfo_MessageDigestAttr_Value" = "Notification - ASN signer info: Message digest attr value";
"ntfLDS_ASN_SignerInfo_SID_DigestAlgorithmNotListed" = "Notification - ASN signer info: SID digest algorithm not listed";
"ntfLDS_ASN_SignerInfo_SID_IncorrectChoice" = "Notification - ASN signer info: SID incorrect choice";
"ntfLDS_ASN_SignerInfo_SigningTimeAttr_Data" = "Notification - ASN signer info: Signing time attr data";
"ntfLDS_ASN_SignerInfo_SigningTimeAttr_Missing" = "Notification - ASN signer info: Signing time attr missing";
"ntfLDS_ASN_SignerInfo_SigningTimeAttr_Value" = "Notification - ASN signer info: Signing time attr value";
"ntfLDS_ASN_SignerInfo_Version_Incorrect" = "Notification - ASN signer info: Version incorrect";
"ntfLDS_Auth_MLSignerInfo_Certificate_CantFindCSCA" = "Notification - Auth ML signer info: Certificate cannot find CSCA";
"ntfLDS_Auth_MLSignerInfo_Certificate_Revoked" = "Notification - Auth ML signer info: Certificate revoked";
"ntfLDS_Auth_MLSignerInfo_Certificate_RootIsNotTrusted" = "Notification - Auth ML signer info: Certificate root is not trusted";
"ntfLDS_Auth_MLSignerInfo_Certificate_SignatureInvalid" = "Notification - Auth ML signer info: Certificate signature invalid";
"ntfLDS_Auth_MLSignerInfo_Certificate_Validity" = "Notification - Auth ML signer info: Certificate validity";
"ntfLDS_Auth_SignerInfo_Certificate_CantFindCSCA" = "Notification - Auth signer info: Certificate cannot find CSCA";
"ntfLDS_Auth_SignerInfo_Certificate_Revoked" = "Notification - Auth signer info: Certificate revoked";
"ntfLDS_Auth_SignerInfo_Certificate_RootIsNotTrusted" = "Notification - Auth signer info: Certificate root is not trusted";
"ntfLDS_Auth_SignerInfo_Certificate_SignatureInvalid" = "Notification - Auth signer info: Certificate signature invalid";
"ntfLDS_Auth_SignerInfo_Certificate_Validity" = "Notification - Auth signer info: Certificate validity";
"ntfLDS_BSI_BlackList_Version_Incorrect" = "Notification - BSI: Black list version incorrect";
"ntfLDS_BSI_DefectList_Version_Incorrect" = "Notification - BSI: Defect  list version incorrect";
"ntfLDS_Biometrics_BDB_DataLength_Incorrect" = "Notification - Biometrics: BDB data length incorrect";
"ntfLDS_Biometrics_BDB_Data_EyeColor" = "Notification - Biometrics: BDB Data Eye Color";
"ntfLDS_Biometrics_BDB_Data_FaceImageType" = "Notification - Biometrics: BDB Data Face Image Type";
"ntfLDS_Biometrics_BDB_Data_Gender" = "Notification - Biometrics: BDB Data Gender";
"ntfLDS_Biometrics_BDB_Data_HairColor" = "Notification - Biometrics: BDB Data Hair Color";
"ntfLDS_Biometrics_BDB_Data_ImageDataType" = "Notification - Biometrics: BDB Data Image Data Type";
"ntfLDS_Biometrics_BDB_Data_PoseAngleU_Pitch" = "Notification - Biometrics: BDB Data Pose Angle U Pitch";
"ntfLDS_Biometrics_BDB_Data_PoseAngleU_Roll" = "Notification - Biometrics: BDB Data Pose Angle U Roll";
"ntfLDS_Biometrics_BDB_Data_PoseAngleU_Yaw" = "Notification - Biometrics: BDB Data Pose Angle U Yaw";
"ntfLDS_Biometrics_BDB_Data_PoseAngle_Pitch" = "Notification - Biometrics: BDB Data Pose Angle Pitch";
"ntfLDS_Biometrics_BDB_Data_PoseAngle_Roll" = "Notification - Biometrics: BDB Data Pose Angle Roll";
"ntfLDS_Biometrics_BDB_Data_PoseAngle_Yaw" = "Notification - Biometrics: BDB Data Pose Angle Yaw";
"ntfLDS_Biometrics_BDB_FormatID_Incorrect" = "Notification - Biometrics: BDB format ID incorrect";
"ntfLDS_Biometrics_BDB_Image_Missing" = "Notification - Biometrics: BDB image missing";
"ntfLDS_Biometrics_BDB_Version_Incorrect" = "Notification - Biometrics: BDB version incorrect";
"ntfLDS_Biometrics_FormatOwner_Incorrect" = "Notification - Biometrics: Format owner incorrect";
"ntfLDS_Biometrics_FormatOwner_Missing" = "Notification - Biometrics: Format owner missing";
"ntfLDS_Biometrics_FormatType_Incorrect" = "Notification - Biometrics: Format type incorrect";
"ntfLDS_Biometrics_FormatType_Missing" = "Notification - Biometrics: Format type missing";
"ntfLDS_Biometrics_SubType_Incorrect" = "Notification - Biometrics: Subtype incorrect";
"ntfLDS_Biometrics_SubType_Missing" = "Notification - Biometrics: Subtype missing";
"ntfLDS_Biometrics_Type_Incorrect" = "Notification - Biometrics: Type incorrect";
"ntfLDS_CVCertificate_NonCVCADomainParameters" = "Notification - CV Certificate: Non CVCA domain parameters";
"ntfLDS_CVCertificate_Profile_IncorrectVersion" = "Notification - CV Certificate: Profile incorrect version";
"ntfLDS_CVCertificate_Validity" = "Notification - CV Certificate: Validity";
"ntfLDS_CV_Certificate_PrivateKey_IncorrectVersion" = "Notification - CV Certificate: Private key incorrect version";
"ntfLDS_ICAO_Application_LDSVersion_Inconsistent" = "Notification - ICAO application: LDS version inconsistent";
"ntfLDS_ICAO_Application_LDSVersion_Unsupported" = "Notification - ICAO application: LDS version unsupported";
"ntfLDS_ICAO_Application_UnicodeVersion_Inconsistent" = "Notification - ICAO application: Unicode version inconsistent";
"ntfLDS_ICAO_Application_UnicodeVersion_Unsupported" = "Notification - ICAO application: Unicode version unsupported";
"ntfLDS_ICAO_COM_DGPM_Incorrect" = "Notification - ICAO COM: DGPM incorrect";
"ntfLDS_ICAO_COM_DGPM_Missing" = "Notification - ICAO COM: DGPM missing";
"ntfLDS_ICAO_COM_DGPM_Unexpected" = "Notification - ICAO COM: DGPM unexpected";
"ntfLDS_ICAO_COM_LDS_Version_Incorrect" = "Notification - ICAO COM: LDS version incorrect";
"ntfLDS_ICAO_COM_LDS_Version_Missing" = "Notification - ICAO COM: LDS version missing";
"ntfLDS_ICAO_COM_Unicode_Version_Incorrect" = "Notification - ICAO COM: Unicode version incorrect";
"ntfLDS_ICAO_COM_Unicode_Version_Missing" = "Notification - ICAO COM: Unicode version missing";
"ntfLDS_ICAO_Certificate_Ext_AuthKeyID_IncorrectData" = "Notification - ICAO certificate extension Auth key: Incorrect data";
"ntfLDS_ICAO_Certificate_Ext_AuthKeyID_KeyID_Missed" = "Notification - ICAO certificate extension Auth key: Key ID missed";
"ntfLDS_ICAO_Certificate_Ext_AuthKeyID_Missed" = "Notification - ICAO certificate extension Auth key: ID missed";
"ntfLDS_ICAO_Certificate_Ext_BasicC_IncorrectData" = "Notification - ICAO certificate extension: Basic constraints incorrect data";
"ntfLDS_ICAO_Certificate_Ext_BasicC_IncorrectUsage1" = "Notification - ICAO certificate extension: Basic constraints incorrect usage 1";
"ntfLDS_ICAO_Certificate_Ext_BasicC_IncorrectUsage2" = "Notification - ICAO certificate extension: Basic constraints incorrect usage 2";
"ntfLDS_ICAO_Certificate_Ext_BasicC_Missed" = "Notification - ICAO certificate extension: Basic constraints missed";
"ntfLDS_ICAO_Certificate_Ext_BasicC_NotCritical" = "Notification - ICAO certificate extension: Basic constraints not critical";
"ntfLDS_ICAO_Certificate_Ext_BasicC_PathLenC_Incorrect" = "Notification - ICAO certificate extension: Basic constraints path LenC incorrect";
"ntfLDS_ICAO_Certificate_Ext_BasicC_PathLenC_Missed" = "Notification - ICAO certificate extension: Basic constraints path LenC missed";
"ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_Empty" = "Notification - ICAO certificate extension: CRL dist point empty";
"ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_IncorrectData" = "Notification - ICAO certificate extension: CRL dist point incorrect data";
"ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_Missed" = "Notification - ICAO certificate extension: CRL dist point missed";
"ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_PointMissed" = "Notification - ICAO certificate extension: CRL dist point point missed";
"ntfLDS_ICAO_Certificate_Ext_CSCA_AltNames_NonMatching" = "Notification - ICAO certificate extension: CSCA alt names non-matching";
"ntfLDS_ICAO_Certificate_Ext_CertPolicies_Empty" = "Notification - ICAO certificate extension: Cert policies empty";
"ntfLDS_ICAO_Certificate_Ext_CertPolicies_IncorrectData" = "Notification - ICAO certificate extension: Dert policies incorrect data";
"ntfLDS_ICAO_Certificate_Ext_CertPolicies_PolicyID_Missed" = "Notification - ICAO certificate extension: Cert policies policy ID missed";
"ntfLDS_ICAO_Certificate_Ext_DocTypeList_Critical" = "Notification - ICAO certificate extension Doc type list: Critical";
"ntfLDS_ICAO_Certificate_Ext_DocTypeList_DocTypes" = "Notification - ICAO certificate extension Doc type list: Doc types";
"ntfLDS_ICAO_Certificate_Ext_DocTypeList_DocTypes_Empty" = "Notification - ICAO certificate extension Doc type list: Doc types empty";
"ntfLDS_ICAO_Certificate_Ext_DocTypeList_IncorrectData" = "Notification - ICAO certificate extension Doc type list: Incorrect data";
"ntfLDS_ICAO_Certificate_Ext_DocTypeList_Missed" = "Notification - ICAO certificate extension Doc type list: Missed";
"ntfLDS_ICAO_Certificate_Ext_DocTypeList_NonCompliant" = "Notification - ICAO certificate extension Doc type list: non-compliant";
"ntfLDS_ICAO_Certificate_Ext_DocTypeList_Version" = "Notification - ICAO certificate extension Doc type list: Version";
"ntfLDS_ICAO_Certificate_Ext_ExtKeyUsage_IncorrectData" = "Notification - ICAO certificate extension: Ext key usage incorrect data";
"ntfLDS_ICAO_Certificate_Ext_ExtKeyUsage_IncorrectUsage" = "Notification - ICAO certificate extension: Ext key usage incorrect usage";
"ntfLDS_ICAO_Certificate_Ext_ExtKeyUsage_NotCritical" = "Notification - ICAO certificate extension: Ext key usage not critical";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_Critical" = "Notification - ICAO certificate extension: Issuer alt name critical";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_DN_Empty" = "Notification - ICAO certificate extension: Issuer alt name DN empty";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_DN_Incorrect" = "Notification - ICAO certificate extension: Issuer alt name DN incorrect";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_DN_NonCompliant" = "Notification - ICAO certificate extension: Issuer alt name DN non-compliant";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_Empty" = "Notification - ICAO certificate extension: Issuer alt name empty";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_IncorrectData" = "Notification - ICAO certificate extension: Issuer alt name incorrect data";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_Missed" = "Notification - ICAO certificate extension: Issuer alt name missed";
"ntfLDS_ICAO_Certificate_Ext_IssuerAltName_NonCompliant" = "Notification - ICAO certificate extension: Issuer alt name non-compliant";
"ntfLDS_ICAO_Certificate_Ext_KeyUsage_IncorrectData" = "Notification - ICAO certificate extension: Key usage incorrect data";
"ntfLDS_ICAO_Certificate_Ext_KeyUsage_Missed" = "Notification - ICAO certificate extension: Key usage missed";
"ntfLDS_ICAO_Certificate_Ext_KeyUsage_NotCritical" = "Notification - ICAO certificate extension: Key usage not critical";
"ntfLDS_ICAO_Certificate_Ext_NameChange_Critical" = "Notification - ICAO certificate extension: Name change critical";
"ntfLDS_ICAO_Certificate_Ext_NameChange_IncorrectData" = "Notification - ICAO certificate extension: Name change incorrect data";
"ntfLDS_ICAO_Certificate_Ext_NameChange_NonCompliant" = "Notification - ICAO certificate extension: Name change non-compliant";
"ntfLDS_ICAO_Certificate_Ext_Optional_Critical" = "Notification - ICAO certificate extension: Optional critical";
"ntfLDS_ICAO_Certificate_Ext_PrivateKeyUP_Empty" = "Notification - ICAO certificate extension: Private key UP empty";
"ntfLDS_ICAO_Certificate_Ext_PrivateKeyUP_IncorrectData" = "Notification - ICAO certificate extension: Private key UP incorrect data";
"ntfLDS_ICAO_Certificate_Ext_PrivateKeyUP_Missed" = "Notification - ICAO certificate extension: Private key UP missed";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_Critical" = "Notification - ICAO certificate extension: Subject alt name critical";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_DN_Empty" = "Notification - ICAO certificate extension: Subject alt name DN empty";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_DN_Incorrect" = "Notification - ICAO certificate extension: Subject alt name DN incorrect";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_DN_NonCompliant" = "Notification - ICAO certificate extension: Subject alt name DN non-compliant";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_Empty" = "Notification - ICAO certificate extension: Subject alt name empty";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_IncorrectData" = "Notification - ICAO certificate extension: Subject alt name incorrect data";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_Missed" = "Notification - ICAO certificate extension: Subject alt name missed";
"ntfLDS_ICAO_Certificate_Ext_SubjectAltName_NonCompliant" = "Notification - ICAO certificate extension: Subject alt name non-compliant";
"ntfLDS_ICAO_Certificate_Ext_SubjectKeyID_IncorrectData" = "Notification - ICAO certificate extension: Subject key ID incorrect data";
"ntfLDS_ICAO_Certificate_Ext_SubjectKeyID_Missed" = "Notification - ICAO certificate extension: Subject key ID missed";
"ntfLDS_ICAO_Certificate_Ext_UsingNonCompliantData" = "Notification - ICAO certificate extension: Using non-compliant data";
"ntfLDS_ICAO_Certificate_IssuerSubject_Country_NonMatching" = "Notification - ICAO certificate: Issuer subject country non-matching";
"ntfLDS_ICAO_Certificate_Issuer_AttributeNonCompliant" = "Notification - ICAO certificate: Issuer attribute non-compliant";
"ntfLDS_ICAO_Certificate_Issuer_CommonName_Missed" = "Notification - ICAO certificate: Issuer common name missed";
"ntfLDS_ICAO_Certificate_Issuer_CountryNonCompliant" = "Notification - ICAO certificate: Issuer country non-compliant";
"ntfLDS_ICAO_Certificate_Issuer_Country_Missed" = "Notification - ICAO certificate: Issuer country missed";
"ntfLDS_ICAO_Certificate_Issuer_SN_NonCompliant" = "Notification - ICAO certificate: Issuer SN non-compliant";
"ntfLDS_ICAO_Certificate_MissedExtensions" = "Notification - ICAO certificate: Missed extensions";
"ntfLDS_ICAO_Certificate_SN_NonCompliant" = "Notification - ICAO certificate: SN non-compliant";
"ntfLDS_ICAO_Certificate_Subject_AttributeNonCompliant" = "Notification - ICAO certificate: Subject attribute non-compliant";
"ntfLDS_ICAO_Certificate_Subject_CommonNameNonCompliant" = "Notification - ICAO certificate: Subject common name non-compliant";
"ntfLDS_ICAO_Certificate_Subject_CommonName_Missed" = "Notification - ICAO certificate: Subject common name missed";
"ntfLDS_ICAO_Certificate_Subject_CountryNonCompliant" = "Notification - ICAO certificate: Subject country non-compliant";
"ntfLDS_ICAO_Certificate_Subject_Country_Missed" = "Notification - ICAO certificate: Subject country missed";
"ntfLDS_ICAO_Certificate_Subject_NonCompliant" = "Notification - ICAO certificate: Subject non-compliant";
"ntfLDS_ICAO_Certificate_Subject_SN_NonCompliant" = "Notification - ICAO certificate: Subject SN non-compliant";
"ntfLDS_ICAO_Certificate_UnsupportedPublicKeyAlgorithm" = "Notification - ICAO certificate: Unsupported public key algorithm";
"ntfLDS_ICAO_Certificate_UnsupportedSignatureAlgorithm" = "Notification - ICAO certificate: Unsupported signature algorithm";
"ntfLDS_ICAO_Certificate_UsingNonCompliantData" = "Notification - ICAO certificate: Using non-compliant data";
"ntfLDS_ICAO_Certificate_Validity" = "Notification - ICAO certificate: Validity";
"ntfLDS_ICAO_Certificate_Version_Incorrect" = "Notification - ICAO certificate: Version incorrect";
"ntfLDS_ICAO_Certificate_Version_Missed" = "Notification - ICAO certificate: Version missed";
"ntfLDS_ICAO_DeviationList_Version_Incorrect" = "Notification - ICAO Deviation list: Version incorrect";
"ntfLDS_ICAO_LDSObject_DGHash_Extra" = "Notification - ICAO LDS object: DG hash extra";
"ntfLDS_ICAO_LDSObject_DGHash_Missing" = "Notification - ICAO LDS object: DG hash missing";
"ntfLDS_ICAO_LDSObject_DGNumber_Incorrect" = "Notification - ICAO LDS object: DG number incorrect";
"ntfLDS_ICAO_LDSObject_IncorrectContentOID" = "Notification - ICAO LDS object: Incorrect content OID";
"ntfLDS_ICAO_LDSObject_Version_Incorrect" = "Notification - ICAO LDS object: Version incorrect";
"ntfLDS_ICAO_MasterList_Version_Incorrect" = "Notification - ICAO master list: Version incorrect";
"ntfLDS_ICAO_SignedData_CRLs_IncorrectUsage" = "Notification - ICAO signed data: CRLs incorrect usage";
"ntfLDS_ICAO_SignedData_Certificates_Empty" = "Notification - ICAO signed data: Certificates empty";
"ntfLDS_ICAO_SignedData_Certificates_Missed" = "Notification - ICAO signed data: Certificates missed";
"ntfLDS_ICAO_SignedData_DigestAlgorithms_Empty" = "Notification - ICAO signed data: Digest algorithms empty";
"ntfLDS_ICAO_SignedData_DigestAlgorithms_Unsupported" = "Notification - ICAO signed data: Digest algorithms unsupported";
"ntfLDS_ICAO_SignedData_SignerInfos_MultipleEntries" = "Notification - ICAO signed data: Signer infos multiple entries";
"ntfLDS_ICAO_SignedData_Version_Incorrect" = "Notification - ICAO signed data: Version incorrect";
"ntfLDS_MRZ_DOB_Error" = "Notification - MRZ: DOB error";
"ntfLDS_MRZ_DOB_IncorrectChecksum" = "Notification - MRZ: DOB incorrect checksum";
"ntfLDS_MRZ_DOB_SyntaxError" = "Notification - MRZ: DOB syntax error";
"ntfLDS_MRZ_DOE_Error" = "Notification - MRZ: DOE error";
"ntfLDS_MRZ_DOE_IncorrectChecksum" = "Notification - MRZ: DOE incorrect checksum";
"ntfLDS_MRZ_DOE_SyntaxError" = "Notification - MRZ: DOE syntax error";
"ntfLDS_MRZ_DocumentType_Unknown" = "Notification - MRZ: Document type unknown";
"ntfLDS_MRZ_Incorrect" = "Notification - MRZ: Incorrect";
"ntfLDS_MRZ_IncorrectChecksum" = "Notification - MRZ: Incorrect checksum";
"ntfLDS_MRZ_IssuingState_SyntaxError" = "Notification - MRZ: Issuing state syntax error";
"ntfLDS_MRZ_Name_IsVoid" = "Notification - MRZ: Name is void";
"ntfLDS_MRZ_Nationality_SyntaxError" = "Notification - MRZ: Nationality syntax error";
"ntfLDS_MRZ_Number_IncorrectChecksum" = "Notification - MRZ: Number incorrect checksum";
"ntfLDS_MRZ_OptionalData_IncorrectChecksum" = "Notification - MRZ: Optional data incorrect checksum";
"ntfLDS_MRZ_Sex_Incorrect" = "Notification - MRZ: Sex incorrect";
"ntfLDS_SI_AA_Info_InconsistentAlgorithmReference" = "Notification - SI: AA info inconsistent algorithm reference";
"ntfLDS_SI_AA_Info_IncorrectVersion" = "Notification - SI: AA info incorrect version";
"ntfLDS_SI_AA_Info_UnsupportedAlgorithm" = "Notification - SI: AA info unsupported algorithm";
"ntfLDS_SI_CA_DomainParams_UnsupportedAlgorithm" = "Notification - SI: CA Domain Params Unsupported Algorithm";
"ntfLDS_SI_CA_Info_IncorrectVersion" = "Notification - SI: CA Info Incorrect Version";
"ntfLDS_SI_CA_PublicKey_UnsupportedAlgorithm" = "Notification - SI: CA PublicKey Unsupported Algorithm";
"ntfLDS_SI_PACE_DomainParams_UnsupportedAlgorithm" = "Notification - SI: PACE Domain Params Unsupported Algorithm";
"ntfLDS_SI_PACE_DomainParams_UsingStdRef" = "Notification - SI: PACE Domain Params Using Std Ref";
"ntfLDS_SI_PACE_Info_DeprecatedVersion" = "Notification - SI: PACE Info Deprecated Version";
"ntfLDS_SI_PACE_Info_UnsupportedStdParameters" = "Notification - SI: PACE Info Unsupported Std Parameters";
"ntfLDS_SI_RI_DomainParams_UnsupportedAlgorithm" = "Notification - SI: RI domain params unsupported algorithm";
"ntfLDS_SI_RI_Info_IncorrectVersion" = "Notification - SI: RI info incorrect version";
"ntfLDS_SI_Storage_CA_AnonymousInfos" = "Notification - SI: CA Anonymous Infos";
"ntfLDS_SI_Storage_CA_DomainParams_NoRequiredOption" = "Notification - SI: CA Domain Params No Required Option";
"ntfLDS_SI_Storage_CA_DomainParams_NotAvailable" = "Notification - SI: CA Domain Params Not Available";
"ntfLDS_SI_Storage_CA_IncorrectInfosQuantity" = "Notification - SI: CA Incorrect Infos Quantity";
"ntfLDS_SI_Storage_CA_Info_NoMatchingDomainParams" = "Notification - SI: CA Info No Matching Domain Params";
"ntfLDS_SI_Storage_CA_Info_NoMatchingPublicKey" = "Notification - SI: CA Info No Matching Public Key";
"ntfLDS_SI_Storage_CA_Info_NotAvailable" = "Notification - SI: CA Info Not Available";
"ntfLDS_SI_Storage_CardInfoLocator_MultipleEntries" = "Notification - SI: Card Info Locator Multiple Entries";
"ntfLDS_SI_Storage_PACEInfos_NonConsistant" = "Notification - SI: Storage PACE Info Non Consistant";
"ntfLDS_SI_Storage_PACE_Info_NoMatchingDomainParams" = "Notification - SI: PACE Info No Matching Domain Params";
"ntfLDS_SI_Storage_PACE_Info_NoStdParameters" = "Notification - SI: PACE Info No Std Parameters";
"ntfLDS_SI_Storage_PACE_Info_NotAvailable" = "Notification - SI: PACE Info Not Available";
"ntfLDS_SI_Storage_PrivilegedTI_IncorrectUsage" = "Notification - SI: Privileged TI Incorrect Usage";
"ntfLDS_SI_Storage_PrivilegedTI_MultipleEntries" = "Notification - SI: Privileged TI Multiple Entries";
"ntfLDS_SI_Storage_RI_DomainParams_MultipleEntries" = "Notification - SI: RI domain params multiple entries";
"ntfLDS_SI_Storage_TA_Info_NotAvailable" = "Notification - SI: TA Info Not Available";
"ntfLDS_SI_Storage_eIDSecurityInfo_MultipleEntries" = "Notification - SI: eID Security Info Multiple Entries";
"ntfLDS_SI_TA_Info_FileIDForVersion2" = "Notification - SI: TA Info File ID For Version 2";
"ntfLDS_SI_TA_Info_IncorrectVersion" = "Notification - SI: TA Info Incorrect Version";
"ntfLDS_SI_eIDSecurity_UnsupportedDigestAlgorithm" = "Notification - SI: eID Security Unsupported Digest Algorithm";
"ntfLDS_TA_PACEStaticBindingUsed" = "Notification - TA: PACE static binding used";
"ntfLDS_UnsupportedImageFormat" = "Notification: Unsupported image format";
"strAGY" = "AGY";
"strAKADateofBirth" = "AKA: Date of birth";
"strAKAGivenNames" = "AKA: Given name";
"strAKANamePrefix" = "AKA: Name prefix";
"strAKANameSuffix" = "AKA: Name suffix";
"strAKASocialSecurityNumber" = "AKA: Social Insurance Number";
"strAKASurname" = "AKA: Surname";
"strAKASurnameAndGivenNames" = "AKA: Surname and given names";
"strALTCode" = "ALT code";
"strAcademicTitle" = "Academic title";
"strAccessibilityCameraButton" = "Capture an image and start processing";
"strAccessibilityCloseButton" = "Close";
"strAccessibilityTorchButton" = "Torch";
"strAccompaniedby" = "Accompanied by";
"strAddress" = "Address";
"strAddressArea" = "Area";
"strAddressBuilding" = "Unit";
"strAddressCity" = "City";
"strAddressCountry" = "Country";
"strAddressFlat" = "Apartment";
"strAddressHouse" = "Building";
"strAddressJurisdictionCode" = "Jurisdiction code";
"strAddressLocation" = "Location";
"strAddressMunicipality" = "Municipality";
"strAddressPostalCode" = "Postal code";
"strAddressState" = "State";
"strAddressStreet" = "Street";
"strAdministrativeNumber" = "Administrative number";
"strAge" = "Age";
"strAgeAtIssue" = "Age at issue";
"strAirlineDesignatorofboardingpassissuer" = "Airline designator of boarding pass issuer";
"strAirlineName" = "Airline name";
"strAirlineNameFrequentFlyer" = "Airline loyalty program for frequent flyers";
"strAirlineNumericCode" = "Airline numeric code";
"strAirportFrom" = "Airport of departure";
"strAirportTo" = "Airport of arrival";
"strAllergies" = "Allergies";
"strAltDateOfExpiry" = "Alternative date of expiry";
"strApplicationDoNotHavePermission" = "The application doesn't have permission to use the camera, please change the privacy settings";
"strApplicationNumber" = "Application number";
"strArtisticName" = "Pseudonym";
"strAuditInformation" = "Number for validation";
"strAuthentification" = "Authenticity verification";
"strAuthority" = "Issuing authority";
"strAuthorityCode" = "Issuing authority code";
"strAuthorityRUS" = "Issuing authority (National)";
"strAuthorizationNumber" = "Authorization number";
"strAxialProtection" = "Retroreflective protection";
"strBDBType" = "BDB type";
"strBankCardNumber" = "Bank card number";
"strBankCardValidThru" = "Bank card validity";
"strBanknoteNumber" = "Banknote number";
"strBarcode" = "Barcode";
"strBarcodeFormatCheck" = "Barcode format check";
"strBenefitsNumber" = "Benefits number";
"strBinaryCode" = "Binary code";
"strBiometricFormatOwner" = "Biometric format owner";
"strBiometricFormatType" = "Biometric format type";
"strBiometricProductID" = "Biometric product ID";
"strBiometricSubtype" = "Biometric subtype";
"strBiometricType" = "Biometric type";
"strBlankElement" = "Blank element";
"strBloodGroup" = "Blood group";
"strBookletNumber" = "Booklet number";
"strCCWUntil" = "CCW until";
"strCDLClass" = "CDL Class";
"strCSCCode" = "CSC Code";
"strCVV" = "CVV/CVC";
"strCaliber" = "Caliber";
"strCameraUnavailable" = "Camera unavailable";
"strCardAccessNumber" = "Card access number";
"strCategory" = "Category";
"strCenturyDateOfBirth" = "Century of birth";
"strChassisNumber" = "Chassis number";
"strCheckInSequenceNumber" = "Check-in sequence number";
"strChildren" = "Children";
"strCitizenshipOfFirstPerson" = "Citizenship of the first person";
"strCitizenshipOfSecondPerson" = "Citizenship of the second person";
"strCitizenshipStatus" = "Citizenship status";
"strCivilStatus" = "Civil status";
"strColorDynamic" = "Color dynamics";
"strCommercialVehicleCodes" = "Commercial vehicle code";
"strCompanyName" = "Company name";
"strCompartmentCode" = "Compartment code";
"strComplexion" = "Complexion";
"strComplianceType" = "Compliance type";
"strConditions" = "Conditions";
"strConfiguration" = "Configuration";
"strControlNo" = "Control number";
"strCopy" = "Copy";
"strCourtCode" = "Court code";
"strCty" = "County";
"strCurrentDate" = "Current date";
"strCustodyInfo" = "Custody info";
"strDFTAppDirectory" = "App directory";
"strDFTCertificate" = "Certificate";
"strDG1" = "Machine Readable Zone (DG1)";
"strDG10" = "not defined (DG10)";
"strDG11" = "Additional personal detail(s) (DG11)";
"strDG12" = "Additional document details (DG12)";
"strDG13" = "Optional detail(s) (DG13)";
"strDG14" = "EAC info (DG14)";
"strDG15" = "Active Authentication info (DG15)";
"strDG16" = "Person(s) to notify (DG16)";
"strDG17" = "DG17";
"strDG18" = "DG18";
"strDG19" = "DG19";
"strDG2" = "Biometry - Facial data (DG2)";
"strDG20" = "DG20";
"strDG3" = "Biometry - Fingerprint(s) (DG3)";
"strDG4" = "Biometry - Iris Data (DG4)";
"strDG5" = "Portrait(s) (DG5)";
"strDG6" = "not defined (DG6)";
"strDG7" = "Signature / usual mark image (DG7)";
"strDG8" = "not defined (DG8)";
"strDG9" = "not defined (DG9)";
"strDLCDLRestrictionCode" = "CDL Restriction Code";
"strDLClass" = "DL category";
"strDLClassCodeA1From" = "DL category A1 valid from";
"strDLClassCodeA1Notes" = "DL category A1 codes";
"strDLClassCodeA1To" = "DL category A1 valid to";
"strDLClassCodeA2From" = "DL category A2 valid from";
"strDLClassCodeA2Notes" = "DL category A2 codes";
"strDLClassCodeA2To" = "DL category A2 valid to";
"strDLClassCodeA3From" = "DL category A3 valid from";
"strDLClassCodeA3Notes" = "DL category A3 codes";
"strDLClassCodeA3To" = "DL category A3 valid to";
"strDLClassCodeAFrom" = "DL category A valid from";
"strDLClassCodeAMFrom" = "DL category AM valid from";
"strDLClassCodeAMNotes" = "DL category AM codes";
"strDLClassCodeAMTo" = "DL category AM valid to";
"strDLClassCodeANotes" = "DL category A codes";
"strDLClassCodeATo" = "DL category A valid to";
"strDLClassCodeB1From" = "DL category B1 valid from";
"strDLClassCodeB1Notes" = "DL category B1 codes";
"strDLClassCodeB1To" = "DL category B1 valid to";
"strDLClassCodeB2EFrom" = "DL category B2E valid from";
"strDLClassCodeB2ENotes" = "DL category B2E codes";
"strDLClassCodeB2ETo" = "DL category B2E valid to";
"strDLClassCodeB2From" = "DL category B2 valid from";
"strDLClassCodeB2Notes" = "DL category B2 codes";
"strDLClassCodeB2To" = "DL category B2 valid to";
"strDLClassCodeBEFrom" = "DL category BE valid from";
"strDLClassCodeBENotes" = "DL category BE codes";
"strDLClassCodeBETo" = "DL category BE valid to";
"strDLClassCodeBFrom" = "DL category B valid from";
"strDLClassCodeBNotes" = "DL category B codes";
"strDLClassCodeBTPFrom" = "DL category BTP valid from";
"strDLClassCodeBTPNotes" = "DL category BTP codes";
"strDLClassCodeBTPTo" = "DL category BTP valid to";
"strDLClassCodeBTo" = "DL category B valid to";
"strDLClassCodeC1EFrom" = "DL category C1E valid from";
"strDLClassCodeC1ENotes" = "DL category C1E codes";
"strDLClassCodeC1ETo" = "DL category C1E valid to";
"strDLClassCodeC1From" = "DL category C1 valid from";
"strDLClassCodeC1Notes" = "DL category C1 codes";
"strDLClassCodeC1To" = "DL category C1 valid to";
"strDLClassCodeC2From" = "DL category C2 valid from";
"strDLClassCodeC2Notes" = "DL category C2 codes";
"strDLClassCodeC2To" = "DL category C2 valid to";
"strDLClassCodeC3From" = "DL category C3 valid from";
"strDLClassCodeC3Notes" = "DL category C3 codes";
"strDLClassCodeC3To" = "DL category C3 valid to";
"strDLClassCodeCAFrom" = "DL category CA valid from";
"strDLClassCodeCANotes" = "DL category CA codes";
"strDLClassCodeCATo" = "DL category CA valid to";
"strDLClassCodeCDFrom" = "DL category CD valid from";
"strDLClassCodeCDNotes" = "DL category CD codes";
"strDLClassCodeCDTo" = "DL category CD valid to";
"strDLClassCodeCEFrom" = "DL category CE valid from";
"strDLClassCodeCENotes" = "DL category CE codes";
"strDLClassCodeCETo" = "DL category CE valid to";
"strDLClassCodeCFrom" = "DL category C valid from";
"strDLClassCodeCNotes" = "DL category C codes";
"strDLClassCodeCTo" = "DL category C valid to";
"strDLClassCodeD1EFrom" = "DL category D1E valid from";
"strDLClassCodeD1ENotes" = "DL category D1E codes";
"strDLClassCodeD1ETo" = "DL category D1E valid to";
"strDLClassCodeD1From" = "DL category D1 valid from";
"strDLClassCodeD1Notes" = "DL category D1 codes";
"strDLClassCodeD1To" = "DL category D1 valid to";
"strDLClassCodeD2From" = "DL category D2 valid from";
"strDLClassCodeD2Notes" = "DL category D2 codes";
"strDLClassCodeD2To" = "DL category D2 valid to";
"strDLClassCodeD3From" = "DL category D3 valid from";
"strDLClassCodeD3Notes" = "DL category D3 codes";
"strDLClassCodeD3To" = "DL category D3 valid to";
"strDLClassCodeDEFrom" = "DL category DE valid from";
"strDLClassCodeDENotes" = "DL category DE codes";
"strDLClassCodeDETo" = "DL category DE valid to";
"strDLClassCodeDFrom" = "DL category D valid from";
"strDLClassCodeDNotes" = "DL category D codes";
"strDLClassCodeDTo" = "DL category D valid to";
"strDLClassCodeEFrom" = "DL category E valid from";
"strDLClassCodeENotes" = "DL category E codes";
"strDLClassCodeETo" = "DL category E valid to";
"strDLClassCodeFA1From" = "DL category FA1 valid from";
"strDLClassCodeFA1Notes" = "DL category FA1 codes";
"strDLClassCodeFA1To" = "DL category FA1 valid to";
"strDLClassCodeFAFrom" = "DL category FA valid from";
"strDLClassCodeFANotes" = "DL category FA codes";
"strDLClassCodeFATo" = "DL category FA valid to";
"strDLClassCodeFBFrom" = "DL category FB valid from";
"strDLClassCodeFBNotes" = "DL category FB codes";
"strDLClassCodeFBTo" = "DL category FB valid to";
"strDLClassCodeFFrom" = "DL category F valid from";
"strDLClassCodeFNotes" = "DL category F codes";
"strDLClassCodeFTo" = "DL category F valid to";
"strDLClassCodeG1From" = "DL category G1 valid from";
"strDLClassCodeG1Notes" = "DL category G1 codes";
"strDLClassCodeG1To" = "DL category G1 valid to";
"strDLClassCodeGFrom" = "DL category G valid from";
"strDLClassCodeGNotes" = "DL category G codes";
"strDLClassCodeGTo" = "DL category G valid to";
"strDLClassCodeHCFrom" = "DL category HC valid from";
"strDLClassCodeHCNotes" = "DL category HC codes";
"strDLClassCodeHCTo" = "DL category HC valid to";
"strDLClassCodeHFrom" = "DL category H valid from";
"strDLClassCodeHNotes" = "DL category H codes";
"strDLClassCodeHRFrom" = "DL category HR valid from";
"strDLClassCodeHRNotes" = "DL category HR codes";
"strDLClassCodeHRTo" = "DL category HR valid to";
"strDLClassCodeHTo" = "DL category H valid to";
"strDLClassCodeIFrom" = "DL category I valid from";
"strDLClassCodeINotes" = "DL category I codes";
"strDLClassCodeITo" = "DL category I valid to";
"strDLClassCodeJFrom" = "DL category J valid from";
"strDLClassCodeJNotes" = "DL category J codes";
"strDLClassCodeJTo" = "DL category J valid to";
"strDLClassCodeKFrom" = "DL category K valid from";
"strDLClassCodeKNotes" = "DL category K codes";
"strDLClassCodeKTo" = "DL category K valid to";
"strDLClassCodeLCFrom" = "DL category LC valid from";
"strDLClassCodeLCNotes" = "DL category LC codes";
"strDLClassCodeLCTo" = "DL category LC valid to";
"strDLClassCodeLFrom" = "DL category L valid from";
"strDLClassCodeLKFrom" = "DL category LK valid from";
"strDLClassCodeLKNotes" = "DL category LK codes";
"strDLClassCodeLKTo" = "DL category LK valid to";
"strDLClassCodeLNotes" = "DL category L codes";
"strDLClassCodeLRFrom" = "DL category LR valid from";
"strDLClassCodeLRNotes" = "DL category LR codes";
"strDLClassCodeLRTo" = "DL category LR valid to";
"strDLClassCodeLTo" = "DL category L valid to";
"strDLClassCodeMCFrom" = "DL category MC valid from";
"strDLClassCodeMCNotes" = "DL category MC codes";
"strDLClassCodeMCTo" = "DL category MC valid to";
"strDLClassCodeMFrom" = "DL category M valid from";
"strDLClassCodeMNotes" = "DL category M codes";
"strDLClassCodeMRFrom" = "DL category MR valid from";
"strDLClassCodeMRNotes" = "DL category MR codes";
"strDLClassCodeMRTo" = "DL category MR valid to";
"strDLClassCodeMTo" = "DL category M valid to";
"strDLClassCodeNFrom" = "DL category N valid from";
"strDLClassCodeNNotes" = "DL category N codes";
"strDLClassCodeNTFrom" = "DL category NT valid from";
"strDLClassCodeNTNotes" = "DL category NT codes";
"strDLClassCodeNTTo" = "DL category NT valid to";
"strDLClassCodeNTo" = "DL category N valid to";
"strDLClassCodeREFrom" = "DL category RE valid from";
"strDLClassCodeRENotes" = "DL category RE codes";
"strDLClassCodeRETo" = "DL category RE valid to";
"strDLClassCodeRFrom" = "DL category R valid from";
"strDLClassCodeRNotes" = "DL category R codes";
"strDLClassCodeRTo" = "DL category R valid to";
"strDLClassCodeSFrom" = "DL category S valid from";
"strDLClassCodeSNotes" = "DL category S codes";
"strDLClassCodeSTo" = "DL category S valid to";
"strDLClassCodeTBFrom" = "DL category TB valid from";
"strDLClassCodeTBNotes" = "DL category TB codes";
"strDLClassCodeTBTo" = "DL category TB valid to";
"strDLClassCodeTFrom" = "DL category T valid from";
"strDLClassCodeTMFrom" = "DL category TM valid from";
"strDLClassCodeTMNotes" = "DL category TM codes";
"strDLClassCodeTMTo" = "DL category TM valid to";
"strDLClassCodeTNFrom" = "DL category TN valid from";
"strDLClassCodeTNNotes" = "DL category TN codes";
"strDLClassCodeTNTo" = "DL category TN valid to";
"strDLClassCodeTNotes" = "DL category T codes";
"strDLClassCodeTRFrom" = "DL category TR valid from";
"strDLClassCodeTRNotes" = "DL category TR codes";
"strDLClassCodeTRTo" = "DL category TR valid to";
"strDLClassCodeTTo" = "DL category T valid to";
"strDLClassCodeTVFrom" = "DL category TV valid from";
"strDLClassCodeTVNotes" = "DL category TV codes";
"strDLClassCodeTVTo" = "DL category TV valid to";
"strDLClassCodeVFrom" = "DL category V valid from";
"strDLClassCodeVNotes" = "DL category V codes";
"strDLClassCodeVTo" = "DL category V valid to";
"strDLClassCodeWFrom" = "DL category W valid from";
"strDLClassCodeWNotes" = "DL category W codes";
"strDLClassCodeWTo" = "DL category W valid to";
"strDLDuplicateDate" = "Date of duplicate issue";
"strDLEndorsed" = "DL endorsement code";
"strDLIssType" = "Card type";
"strDLRecordCreated" = "Record created";
"strDLRestrictionCode" = "DL Restriction Code";
"strDLUnder18Date" = "Date of 18th birthday";
"strDLUnder19Date" = "Date of 19th birthday";
"strDLUnder21Date" = "Date of 21st birthday";
"strDNINumber" = "DNI number";
"strDSCertificateIssuer" = "DS certificate issuer";
"strDSCertificateSubject" = "DS certificate subject";
"strDSCertificateValidFrom" = "DS certificate valid from";
"strDSCertificateValidTo" = "DS certificate valid to";
"strDUFNumber" = "DUF number";
"strDataDiscriminator" = "Data discriminator";
"strDateFirstRenewal" = "Date of first renewal";
"strDateOfArrival" = "Date of arrival";
"strDateOfBirthOfHusband" = "Date of birth of husband";
"strDateOfBirthOfWife" = "Date of birth of wife";
"strDateOfInsuranceExpiry" = "Expiry date of insurance";
"strDateSecondRenewal" = "Date of second renewal";
"strDateofBirth" = "Date of birth";
"strDateofBirthCheckDigit" = "Check digit for date of birth";
"strDateofBirthChecksum" = "Checksum for date of birth";
"strDateofCreation" = "Creation date";
"strDateofExpiry" = "Date of expiry";
"strDateofExpiryCheckDigit" = "Check digit for date of expiry";
"strDateofExpiryChecksum" = "Checksum for date of expiry";
"strDateofFlight" = "Date of flight";
"strDateofIssue" = "Date of issue";
"strDateofIssueBoardingPass" = "Date of boarding pass issue";
"strDateofIssueCheckDigit" = "Check digit for date of issue";
"strDateofIssueChecksum" = "Checksum for date of issue";
"strDateofPersonalization" = "Personalization date";
"strDateofRegistration" = "Date of registration";
"strDay" = "Day";
"strDepartment" = "Department";
"strDeptNumber" = "Department number";
"strDestination" = "Destination";
"strDiscretionaryData" = "Discretionary data";
"strDoDNumber" = "DoD number";
"strDocumentClassCode" = "Document class code";
"strDocumentClassName" = "Document class";
"strDocumentDiscriminator" = "Document discriminator";
"strDocumentNumber" = "Document number";
"strDocumentNumberCheckDigit" = "Check digit for document number";
"strDocumentNumberChecksum" = "Checksum for document number";
"strDocumentSeries" = "Document series";
"strDocumentTooSmall" = "Fit the document into the frame";
"strDonor" = "Donor";
"strDossierNumber" = "Dossier number";
"strDurationofStay" = "Duration of stay";
"strECEnvironmentalType" = "Vehicle environmental type";
"strEDLDG1" = "Text data elements (DG1)";
"strEDLDG10" = "not defined (DG10)";
"strEDLDG11" = "Optional domestic data (DG11)";
"strEDLDG12" = "Non-match alert (DG12)";
"strEDLDG13" = "Active Authentication info (DG13)";
"strEDLDG14" = "EAC info (DG14)";
"strEDLDG2" = "License holder information (DG2)";
"strEDLDG3" = "Issuing authority details (DG3)";
"strEDLDG4" = "Portrait image (DG4)";
"strEDLDG5" = "Signature / usual mark image (DG5)";
"strEDLDG6" = "Biometry - Facial data (DG6)";
"strEDLDG7" = "Biometry - Fingerprint(s) (DG7)";
"strEDLDG8" = "Biometry - Iris Data (DG8)";
"strEDLDG9" = "Biometry - Other (DG9)";
"strEFCOM" = "EF.COM";
"strEFCVCA" = "EF.CVCA";
"strEFCardAccess" = "EF.CardAccess";
"strEFCardSecurity" = "EF.CardSecurity";
"strEFChipSecurity" = "EF.ChipSecurity";
"strEFSOD" = "EF.SOD";
"strEQVCode" = "EQV code";
"strElectronicTicketIndicator" = "Electronic ticket indicator";
"strElement" = "Element";
"strEndorsementExpirationDate" = "Endorsement expiration date";
"strEngineModel" = "Engine model";
"strEngineNumber" = "Engine number";
"strEnginePower" = "Engine power";
"strEngineVolume" = "Engine volume";
"strError" = "Error";
"strExamDate" = "Exam date";
"strExeptInTanks" = "Other than tanks";
"strEye" = "Iris";
"strEyesColor" = "Eye color";
"strFaculty" = "Faculty";
"strFalseLuminescence" = "Excessive luminescence";
"strFamilyName" = "Family name";
"strFamilyNameTruncation" = "Truncated surname/given name at birth";
"strFastTrack" = "Fast Track service";
"strFatherCountryOfBirth" = "Father's country of birth";
"strFatherDateOfBirth" = "Father's date of birth";
"strFatherGivenName" = "Father's given name";
"strFatherPersonalNumber" = "Father's personal number";
"strFatherPlaceOfBirth" = "Father's place of birth";
"strFatherSurname" = "Father's surname";
"strFathersName" = "Father's name";
"strFathersNameRUS" = "Father's name (National)";
"strFederalElections" = "Federal elections";
"strFee" = "Fee";
"strFieldFromMRZ" = "Field from MRZ";
"strFieldTypeDocumentImage" = "Document image";
"strFillElement" = "Filling element";
"strFinalCheckDigit" = "Final check digit";
"strFinalChecksum" = "Final checksum";
"strFingerprint" = "Fingerprint";
"strFirstIssueDate" = "First issue date";
"strFirstName" = "First name";
"strFirstNameTruncation" = "First name truncation";
"strFlightNumber" = "Flight number";
"strFolioNumber" = "Folio number";
"strFormOfEducation" = "Form of education";
"strFourthName" = "Fourth name";
"strFreeBaggageAllowance" = "Free baggage allowance";
"strFrequentFlyerAirlineDesignator" = "Frequent flyer airline designator";
"strFrequentFlyerNumber" = "Frequent flyer number";
"strFromAirportCode" = "Code of the airport of departure";
"strFuelType" = "Fuel type";
"strGNIBNumber" = "GNIB number";
"strGhostPortrait" = "Ghost portrait";
"strGivenNames" = "Given name";
"strGivenNamesRUS" = "Given name (National)";
"strGlaresOnDocument" = "Avoid glare on the document";
"strGrandfatherName" = "Grandfather's name";
"strHairColor" = "Hair color";
"strHealthNumber" = "Health insurance number";
"strHeight" = "Height";
"strHoldDocumentStraight" = "Hold the document straight";
"strHoloSimple" = "Hologram availability";
"strHoloVerifyDinamic" = "Verify dynamic hologram";
"strHoloVerifyMultiStatic" = "Verify Multi Static Hologram";
"strHoloVerifyStatic" = "Verify Static Hologram";
"strHologramDetection" = "Hologram detection";
"strHolograms" = "Holograms";
"strIPI" = "IPI (invisible personal information)";
"strIRB900" = "IR B900 ink";
"strIRVis" = "IR transparency";
"strISOIssuerIDNumber" = "ID number of ISO issuer";
"strIdentifier" = "Identifier";
"strIdentityCardNumber" = "Identity card number";
"strIdentityCardNumberCheckDigit" = "Check digit for identity card number";
"strIdentityCardNumberChecksum" = "Checksum for identity card number";
"strImagePattern" = "Image patterns";
"strInTanks" = "In tanks";
"strInfrared" = "IR";
"strInventoryNumber" = "Inventory number";
"strInvitationNumber" = "Invitation number";
"strInvitationNumberCheckDigit" = "Check digit for invitation number";
"strInvitationNumberChecksum" = "Checksum for invitation number";
"strInvitedBy" = "Invited by";
"strIqBounds" = "Bounds";
"strIqColorness" = "Color";
"strIqFocus" = "Focus";
"strIqGlares" = "Glares";
"strIssueTimestamp" = "Issue time";
"strIssuerIdentificationNumber" = "Issuer identification number";
"strIssuingStateCode" = "Issuing state code";
"strIssuingStateName" = "Issuing state";
"strJurisdictionEndorsementCode" = "Jurisdiction endorsement code";
"strJurisdictionRestrictionCode" = "Jurisdiction restriction code";
"strJurisdictionVehicleClass" = "Jurisdiction vehicle class";
"strKeepDeviceStill" = "Hold the device still";
"strLastName" = "Last name";
"strLicenseNumber" = "License number";
"strLimitedDurationDocumentIndicator" = "Indicator of document limited duration";
"strLine1CheckDigit" = "Check digit for line 1";
"strLine1Checksum" = "Checksum for line 1";
"strLine1OptionalData" = "Optional data from line 1";
"strLine2CheckDigit" = "Check digit for line 2";
"strLine2Checksum" = "Checksum for line 2";
"strLine2OptionalData" = "Optional data from line 2";
"strLine3CheckDigit" = "Check digit for line 3";
"strLine3Checksum" = "Checksum for line 3";
"strLine3OptionalData" = "Optional data from line 3";
"strLookingDocument" = "Searching for a document...";
"strMCNoviceDate" = "Expiry date of Motorcycle Novice status";
"strMRZ" = "MRZ";
"strMRZLinesICAORFID" = "MRZ lines from ICAO RFID";
"strMRZString1" = "MRZ line 1";
"strMRZString2" = "MRZ line 2";
"strMRZString3" = "MRZ line 3";
"strMRZStrings" = "MRZ lines";
"strMRZStringsWithCorrectCheckSums" = "MRZ lines with correct checksums";
"strMRZType" = "MRZ Type";
"strMailingAddressCity" = "Mailing address - city";
"strMailingAddressJurisdictionCode" = "Mailing address - jurisdiction code";
"strMailingAddressPostalCode" = "Mailing address - postal code";
"strMailingAddressStreet" = "Mailing address - street";
"strMake" = "Make";
"strMaritalStatus" = "Marital status";
"strMaxMassofTrailerBraked" = "Max mass of trailer (braked)";
"strMaxMassofTrailerUnbraked" = "Max mass of trailer (unbraked)";
"strMaxSpeed" = "Max speed";
"strMedicalIndicatorCodes" = "Medical notes/codes";
"strMiddleName" = "Middle name";
"strMiddleNameTruncation" = "Middle name truncation";
"strMifareData" = "MIFARE data";
"strMifareValidity" = "MIFARE validity";
"strMilitaryBookNumber" = "Military ID number";
"strMilitaryServiceFrom" = "Military service from";
"strMilitaryServiceTo" = "Military service to";
"strModel" = "Model";
"strMonth" = "Month";
"strMortgageBy" = "Mortgage by";
"strMotherCountryOfBirth" = "Mother's country of birth";
"strMotherDateOfBirth" = "Mother's date of birth";
"strMotherGivenName" = "Mother's given name";
"strMotherPersonalNumber" = "Mother's personal number";
"strMotherPlaceOfBirth" = "Mother's place of birth";
"strMotherSurname" = "Mother's surname";
"strMothersName" = "Mother's name";
"strNamePrefix" = "Name prefix";
"strNameSuffix" = "Name suffix";
"strNationality" = "Nationality";
"strNationalityCode" = "Nationality code";
"strNonResidentIndicator" = "Non-resident indicator";
"strNone" = "None";
"strNotDefined" = "Undefined";
"strNumberOfCardIssuance" = "Number of card issuances";
"strNumberOfCardIssuanceCheckDigit" = "Check digit for number of card issuances";
"strNumberOfCardIssuanceChecksum" = "Checksum for number of card issuances";
"strNumberOfCylinders" = "Number of cylinders";
"strNumberofAxels" = "Number of axles";
"strNumberofDuplicates" = "Number of duplicates";
"strNumberofEntries" = "Number of entries";
"strNumberofSeats" = "Number of seats";
"strNumberofStandingPlaces" = "Number of standing places";
"strOCRNumber" = "OCR number";
"strOK" = "OK";
"strObservations" = "Observations";
"strOldDateOfIssue" = "Old date of issue";
"strOldDocumentNumber" = "Old document number";
"strOldPlaceOfIssue" = "Old place of issue";
"strOptionalData" = "Optional data";
"strOptionalDataCheckDigit" = "Check digit for optional data";
"strOptionalDataChecksum" = "Checksum for optional data";
"strOptionalDetails" = "Optional details";
"strOrganization" = "Organization";
"strOther" = "Other";
"strOtherName" = "Other name";
"strOtherPersonName" = "Other person, name";
"strOtherValidID" = "Other valid IDs";
"strOwner" = "Owner";
"strPDF417Codec" = "PDF417 codec";
"strPNRCode" = "PNR code";
"strParrentsGivenNames" = "Parents' given names";
"strPassportNumber" = "Passport number";
"strPassportNumberCheckDigit" = "Check digit for passport number";
"strPassportNumberChecksum" = "Checksum for passport number";
"strPatronHeaderVersion" = "Patron header version";
"strPatternDifferentLinesThickness" = "Comparison of the thickness of the pattern lines";
"strPatternIRInvisible" = "Invisible pattern in IR";
"strPatternNotInterrupted" = "No breaks";
"strPatternNotShifted" = "Pattern elements are not shifted";
"strPatternSameColors" = "Same colors of the pattern";
"strPayGrade" = "Pay grade";
"strPayloadCapacity" = "Payload capacity";
"strPaymentPeriodFrom" = "Payment period from";
"strPaymentPeriodTo" = "Payment period to";
"strPermissibleAxleLoad" = "Permissible axle load";
"strPermitDLClass" = "Permit class";
"strPermitDateofExpiry" = "Permit expiry date";
"strPermitDateofIssue" = "Permit issue date";
"strPermitEndorsed" = "Permit endorsement code";
"strPermitIdentifier" = "Permit identifier";
"strPermitRestrictionCode" = "Permit restriction code";
"strPersonToNotifyAddress" = "Notify person: Address";
"strPersonToNotifyDateofRecord" = "Notify person: Date of record";
"strPersonToNotifyName" = "Notify person: Name";
"strPersonToNotifyPhone" = "Notify person: Phone";
"strPersonalNumber" = "Personal number";
"strPersonalNumberCheckDigit" = "Check digit for personal number";
"strPersonalNumberChecksum" = "Checksum for personal number";
"strPersonalSummary" = "Personal data summary";
"strPersonalizationSN" = "Serial number of personalization";
"strPerspectiveAngle" = "Perspective angle";
"strPhone" = "Phone";
"strPhotoArea" = "Photo area";
"strPhotoColor" = "Color of the photo";
"strPhotoCorners" = "Corners of the photo";
"strPhotoElement" = "Photo element";
"strPhotoEmbedType" = "Photo embedding type";
"strPhotoProcessing" = "Photo processing...";
"strPhotoShape" = "Shape of the photo";
"strPhotoSizeCheck" = "Size check";
"strPlaceDocumentInFrame" = "Fit the document into the frame";
"strPlaceOfBirthRUS" = "Place of birth (National)";
"strPlaceOfBirthStateCode" = "Birth state code";
"strPlaceOfExamination" = "Place of examination";
"strPlaceOfIssue" = "Place of issue";
"strPlacePhoneOnDoc" = "Place the phone on the document please";
"strPlaceofBirth" = "Place of birth";
"strPlaceofBirthArea" = "Country/region of birth";
"strPlaceofRegistration" = "Place of registration";
"strPoliceDistrict" = "Police district";
"strPortrait" = "Portrait";
"strPortraitComparison" = "Comparison of the portraits";
"strPortraitOfChild" = "Portrait of child";
"strPortraitVSCamera" = "Portrait vs Camera image";
"strPortraitVSGhost" = "Portrait vs Ghost photo";
"strPortraitVSRFID" = "Portrait vs RFID chip portrait";
"strPowerWeightRatio" = "Power-to-weight ratio";
"strPrecinct" = "Precinct";
"strPrepareCamera" = "Preparing the camera...";
"strPresentNextPage" = "Please provide the next page";
"strPreviousType" = "Type/number of the previous document";
"strProcessingDocument" = "Document processing...";
"strProfession" = "Profession";
"strProfessionalIdNumber" = "Professional ID number";
"strProofOfCitizenship" = "Proof of citizenship";
"strPseudoCode" = "Pseudocode";
"strPurposeOfEntry" = "Purpose of entry";
"strRFIDVSCamera" = "RFID chip portrait vs Camera image";
"strRaceEthnicity" = "Race/ethnicity";
"strRank" = "Rank";
"strReadingRFID" = "Reading RFID chip data";
"strReadingRFIDDGiOS" = "Reading RFID %@ data";
"strRecognizedDocumentType" = "Document type";
"strReferenceNumber" = "Unique number";
"strReferenceNumberCheckDigit" = "Unique number check digit";
"strReferenceNumberChecksum" = "Unique number checksum";
"strRegCertBodyNumber" = "Body number";
"strRegCertBodyType" = "Body type";
"strRegCertCarColor" = "Vehicle color";
"strRegCertCarMark" = "Vehicle make";
"strRegCertCarModel" = "Vehicle model";
"strRegCertCarType" = "Vehicle type";
"strRegCertMaxWeight" = "Max permissible weight";
"strRegCertRegNumber" = "Registration number";
"strRegCertRegNumberCheckDigit" = "Check digit for registration number";
"strRegCertRegNumberChecksum" = "Checksum for registration number";
"strRegCertVIN" = "Vehicle identification number";
"strRegCertVINCheckDigit" = "Check digit for VIN";
"strRegCertVINChecksum" = "Checksum for VIN";
"strRegCertVehicleITSCode" = "Vehicle ITS code";
"strRegCertWeight" = "Unladen mass";
"strRelationship" = "Relationship";
"strReligion" = "Religion";
"strRemainderTerm" = "Months to expire";
"strResidentFrom" = "Resident from";
"strResidentUntil" = "Resident until";
"strResolution" = "Resolution";
"strRetirementNumber" = "Retirement number";
"strRevisionDate" = "Revision date";
"strRoomNumber" = "Room number";
"strSBHIntegrityOptions" = "SBH integrity options";
"strSBHSecurityOptions" = "SBH security options";
"strSeatNumber" = "Seat number";
"strSecondName" = "Second name";
"strSecondSurname" = "Second surname";
"strSection" = "Section";
"strSecurityText" = "Security text";
"strSelecteeIndicator" = "Selectee indicator";
"strSequenceNumber" = "Sequence number";
"strSerialNumber" = "Serial number";
"strSettings" = "Settings";
"strSex" = "Sex";
"strSignature" = "Signature";
"strSkinColor" = "Skin color";
"strSocialSecurityNumber" = "Social insurance number";
"strSpCode" = "Special code";
"strSpecialNotes" = "Special notes";
"strSponsor" = "Sponsor";
"strSponsorSSN" = "Sponsor SSN";
"strSponsorService" = "Sponsor service";
"strSponsorStatus" = "Sponsor status";
"strStamp" = "Stamp";
"strStampNumber" = "Stamp number";
"strStatusDateofExpiry" = "Status Expiry Date";
"strSurname" = "Surname";
"strSurnameAndGivenNames" = "Surname and given names";
"strSurnameAndGivenNamesCheckDigit" = "Check digit for surname and given names";
"strSurnameAndGivenNamesChecksum" = "Checksum for surname and given names";
"strSurnameAndGivenNamesRUS" = "Surname and given names (National)";
"strSurnameAtBirth" = "Surname at birth";
"strSurnameOfHusbandAfterRegistration" = "Surname of husband after registration";
"strSurnameOfWifeAfterRegistration" = "Surname of wife after registration";
"strSurnameofSpose" = "Spouse's surname";
"strTax" = "Tax";
"strTaxNumber" = "Tax number";
"strTelexCode" = "Telegraph code";
"strTerritorialValidity" = "Territorial validity";
"strThirdName" = "Third name";
"strTicketNumber" = "Ticket number";
"strTiltTheDocumentHologram" = "Tilt to reveal a hologram";
"strTitle" = "Position";
"strToAirportCode" = "Code of the airport of arrival";
"strTorchUnavailable" = "Torch unavailable";
"strTrackingNumber" = "Tracking number";
"strTrailerHitch" = "Trailer hitch";
"strTransactionNumber" = "Transaction number";
"strTransmissionType" = "Transmission type";
"strTypeApprovalNumber" = "Type of approval number";
"strURL" = "URL";
"strUSCIS" = "USCIS";
"strUV" = "UV";
"strUVFibers" = "UV security fibers";
"strUVLuminescence" = "UV dull paper check";
"strUniqueCustomerIdentifier" = "Unique customer identifier";
"strVRCDataObjectEntry" = "Vehicle data from the DG1 data group";
"strVaccinationCertificateIdentifier" = "Unique vaccination certificate identifier";
"strValidityPeriod" = "Validity period";
"strVehicleCategory" = "Vehicle category";
"strVeteran" = "Veteran";
"strVisaClass" = "Visa Class";
"strVisaID" = "Visa ID";
"strVisaIDCheckDigit" = "Check digit for visa ID";
"strVisaIDChecksum" = "Checksum for visa ID";
"strVisaIDRUS" = "Visa ID (National)";
"strVisaNumber" = "Visa Number";
"strVisaNumberCheckDigit" = "Check digit for visa number";
"strVisaNumberChecksum" = "Checksum for visa number";
"strVisaSubClass" = "Visa subclass";
"strVisaType" = "Visa type";
"strVisaValidFrom" = "Visa valid from";
"strVisaValidUntil" = "Visa valid until";
"strVisaValidUntilCheckDigit" = "Check digit for visa expiry date";
"strVisaValidUntilChecksum" = "Checksum for visa expiry date";
"strVisibleLight" = "Visible light";
"strVoter" = "Voter";
"strVoterKey" = "Voter Key";
"strVoucherNumber" = "Voucher number";
"strWeight" = "Weight";
"strWeightPound" = "Weight (pound)";
"strYear" = "Year";
"strYearsSinceIssue" = "Years since issue";
"streIDPlaceOfBirthCity" = "Place of birth: City";
"streIDPlaceOfBirthCountry" = "Place of birth: Country";
"streIDPlaceOfBirthState" = "Place of birth: State";
"streIDPlaceOfBirthStreet" = "Place of birth: Street";
"streIDPlaceOfBirthZipcode" = "Place of birth: Postal code";
"streIDResidencePermit1" = "Residence permit 1";
"streIDResidencePermit2" = "Residence permit 2";
"strfppLeftIndexFinger" = "Left index finger";
"strfppLeftLittleFinger" = "Left little finger";
"strfppLeftMiddleFinger" = "Left middle finger";
"strfppLeftRingFinger" = "Left ring finger";
"strfppLeftThumb" = "Left thumb";
"strfppRightIndexFinger" = "Right index finger";
"strfppRightLittleFinger" = "Right little finger";
"strfppRightMiddleFinger" = "Right middle finger";
"strfppRightRingFinger" = "Right ring finger";
"strfppRightThumb" = "Right thumb";
